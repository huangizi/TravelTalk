import _extends from "@babel/runtime/helpers/extends";
import React, { useContext } from 'react';
import { IconContext } from '../context';

function IconThumbDownFillComponent(iconProps, ref) {
  const _useContext = useContext(IconContext),
        _useContext$prefixCls = _useContext.prefixCls,
        prefixCls = _useContext$prefixCls === void 0 ? 'arco' : _useContext$prefixCls;

  const spin = iconProps.spin,
        className = iconProps.className;
  const props = {
    "aria-hidden": true,
    focusable: false,
    ref,
    ...iconProps,
    className: `${className ? className + ' ' : ''}${prefixCls}-icon ${prefixCls}-icon-thumb-down-fill`
  };

  if (spin) {
    props.className = `${props.className} ${prefixCls}-icon-loading`;
  }

  delete props.spin;
  delete props.isIcon;
  return /*#__PURE__*/React.createElement("svg", _extends({
    fill: "none",
    stroke: "currentColor",
    strokeWidth: "4",
    viewBox: "0 0 48 48"
  }, props), /*#__PURE__*/React.createElement("path", {
    fill: "currentColor",
    fillRule: "evenodd",
    stroke: "none",
    d: "M43 5v26h-4V5h4Z",
    clipRule: "evenodd"
  }), /*#__PURE__*/React.createElement("path", {
    fill: "currentColor",
    stroke: "none",
    d: "M20.9 43.537a2 2 0 0 0 2.83-.364L32.964 31H36V5H12.424a2 2 0 0 0-1.89 1.346L4.838 25.692C3.938 28.29 5.868 31 8.618 31h10.568l-2.421 5.448a4 4 0 0 0 1.184 4.77l2.951 2.32Z"
  }));
}

const IconThumbDownFill = /*#__PURE__*/React.forwardRef(IconThumbDownFillComponent);
IconThumbDownFill.defaultProps = {
  isIcon: true
};
IconThumbDownFill.displayName = 'IconThumbDownFill';
export default IconThumbDownFill;