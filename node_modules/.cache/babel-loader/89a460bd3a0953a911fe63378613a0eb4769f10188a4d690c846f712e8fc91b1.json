{"ast":null,"code":"var __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nimport { toSafeString, trimNumber, validateNumber, getNumberPrecision, supportBigInt } from './utils';\nvar BigIntDecimal = /** @class */function () {\n  function BigIntDecimal(value) {\n    this.origin = '';\n    this.origin = String(value);\n    if (!value && value !== 0 || !this.origin.trim()) {\n      this.isEmpty = true;\n      return;\n    }\n    if (value === '-') {\n      this.isNaN = true;\n      return;\n    }\n    var safeValueString = toSafeString(value);\n    if (validateNumber(safeValueString)) {\n      var _a = trimNumber(safeValueString),\n        negative = _a.negative,\n        trimStr = _a.trimStr;\n      var _b = __read(trimStr.split('.'), 2),\n        integerStr = _b[0],\n        _c = _b[1],\n        decimalStr = _c === void 0 ? '0' : _c;\n      this.isNegative = negative;\n      this.integer = BigInt(integerStr);\n      this.decimal = BigInt(decimalStr);\n      this.decimalLen = decimalStr.length;\n    } else {\n      this.isNaN = true;\n    }\n  }\n  Object.defineProperty(BigIntDecimal.prototype, \"isInvalid\", {\n    get: function () {\n      return this.isEmpty || this.isNaN;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  BigIntDecimal.prototype.getMark = function () {\n    return this.isNegative ? '-' : '';\n  };\n  BigIntDecimal.prototype.getIntegerStr = function () {\n    return this.integer.toString();\n  };\n  BigIntDecimal.prototype.getDecimalStr = function () {\n    return this.decimal.toString().padStart(this.decimalLen, '0');\n  };\n  BigIntDecimal.prototype.alignDecimal = function (decimalLength) {\n    return BigInt(\"\" + this.getMark() + this.getIntegerStr() + this.getDecimalStr().padEnd(decimalLength, '0'));\n  };\n  BigIntDecimal.prototype.negate = function () {\n    var numStr = this.toString();\n    return new BigIntDecimal(numStr.startsWith('-') ? numStr.slice(1) : \"-\" + numStr);\n  };\n  BigIntDecimal.prototype.add = function (value) {\n    var offset = new BigIntDecimal(value);\n    if (offset.isInvalid) {\n      return this;\n    }\n    if (this.isInvalid) {\n      return offset;\n    }\n    var maxDecimalLength = Math.max(this.decimalLen, offset.decimalLen);\n    var thisAlignedDecimal = this.alignDecimal(maxDecimalLength);\n    var offsetAlignedDecimal = offset.alignDecimal(maxDecimalLength);\n    var valueStr = (thisAlignedDecimal + offsetAlignedDecimal).toString();\n    var _a = trimNumber(valueStr),\n      negativeStr = _a.negativeStr,\n      trimStr = _a.trimStr;\n    var hydrateValueStr = \"\" + negativeStr + trimStr.padStart(maxDecimalLength + 1, '0');\n    return new BigIntDecimal(hydrateValueStr.slice(0, -maxDecimalLength) + \".\" + hydrateValueStr.slice(-maxDecimalLength));\n  };\n  BigIntDecimal.prototype.equals = function (target) {\n    return this.toString() === (target === null || target === void 0 ? void 0 : target.toString());\n  };\n  BigIntDecimal.prototype.less = function (target) {\n    return this.isInvalid || target.isInvalid ? false : this.add(target.negate().toString()).toNumber() < 0;\n  };\n  BigIntDecimal.prototype.toNumber = function () {\n    return this.isNaN ? NaN : Number(this.toString());\n  };\n  BigIntDecimal.prototype.toString = function (options) {\n    if (options === void 0) {\n      options = {\n        safe: true\n      };\n    }\n    var safe = options.safe,\n      precision = options.precision;\n    var result = safe ? this.isInvalid ? '' : trimNumber(\"\" + this.getMark() + this.getIntegerStr() + \".\" + this.getDecimalStr()).fullStr : this.origin;\n    return typeof precision === 'number' ? toFixed(result, precision) : result;\n  };\n  return BigIntDecimal;\n}();\nvar NumberDecimal = /** @class */function () {\n  function NumberDecimal(value) {\n    this.origin = '';\n    this.origin = String(value);\n    this.number = Number(value);\n    if (!value && value !== 0 || !this.origin.trim()) {\n      this.isEmpty = true;\n    } else {\n      this.isNaN = Number.isNaN(this.number);\n    }\n  }\n  Object.defineProperty(NumberDecimal.prototype, \"isInvalid\", {\n    get: function () {\n      return this.isEmpty || this.isNaN;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  NumberDecimal.prototype.negate = function () {\n    return new NumberDecimal(-this.toNumber());\n  };\n  NumberDecimal.prototype.equals = function (target) {\n    return this.toNumber() === (target === null || target === void 0 ? void 0 : target.toNumber());\n  };\n  NumberDecimal.prototype.less = function (target) {\n    return this.isInvalid || target.isInvalid ? false : this.add(target.negate().toString()).toNumber() < 0;\n  };\n  NumberDecimal.prototype.add = function (value) {\n    var offset = new NumberDecimal(value);\n    if (offset.isInvalid) {\n      return this;\n    }\n    if (this.isInvalid) {\n      return offset;\n    }\n    var result = this.number + offset.number;\n    if (result > Number.MAX_SAFE_INTEGER) {\n      return new NumberDecimal(Number.MAX_SAFE_INTEGER);\n    }\n    if (result < Number.MIN_SAFE_INTEGER) {\n      return new NumberDecimal(Number.MIN_SAFE_INTEGER);\n    }\n    var maxPrecision = Math.max(getNumberPrecision(this.number), getNumberPrecision(offset.number));\n    return new NumberDecimal(result.toFixed(maxPrecision));\n  };\n  NumberDecimal.prototype.toNumber = function () {\n    return this.number;\n  };\n  NumberDecimal.prototype.toString = function (options) {\n    if (options === void 0) {\n      options = {\n        safe: true\n      };\n    }\n    var safe = options.safe,\n      precision = options.precision;\n    var result = safe ? this.isInvalid ? '' : toSafeString(this.number) : this.origin;\n    return typeof precision === 'number' ? toFixed(result, precision) : result;\n  };\n  return NumberDecimal;\n}();\nexport function getDecimal(value) {\n  return supportBigInt() ? new BigIntDecimal(value) : new NumberDecimal(value);\n}\n/**\n * Replace String.prototype.toFixed like Math.round\n * If cutOnly is true, just slice the tail\n * e.g. Decimal.toFixed(0.15) will return 0.2, not 0.1\n */\nexport function toFixed(numStr, precision, cutOnly) {\n  if (cutOnly === void 0) {\n    cutOnly = false;\n  }\n  if (numStr === '') {\n    return '';\n  }\n  var separator = '.';\n  var _a = trimNumber(numStr),\n    negativeStr = _a.negativeStr,\n    integerStr = _a.integerStr,\n    decimalStr = _a.decimalStr;\n  var precisionDecimalStr = \"\" + separator + decimalStr;\n  var numberWithoutDecimal = \"\" + negativeStr + integerStr;\n  if (precision >= 0) {\n    var advancedNum = Number(decimalStr[precision]);\n    if (advancedNum >= 5 && !cutOnly) {\n      var advancedDecimal = getDecimal(numStr).add(negativeStr + \"0.\" + '0'.repeat(precision) + (10 - advancedNum));\n      return toFixed(advancedDecimal.toString(), precision, cutOnly);\n    }\n    return precision === 0 ? numberWithoutDecimal : \"\" + numberWithoutDecimal + separator + decimalStr.padEnd(precision, '0').slice(0, precision);\n  }\n  return \"\" + numberWithoutDecimal + (precisionDecimalStr === '.0' ? '' : precisionDecimalStr);\n}","map":{"version":3,"names":["__read","o","n","m","Symbol","iterator","i","call","r","ar","e","next","done","push","value","error","toSafeString","trimNumber","validateNumber","getNumberPrecision","supportBigInt","BigIntDecimal","origin","String","trim","isEmpty","isNaN","safeValueString","_a","negative","trimStr","_b","split","integerStr","_c","decimalStr","isNegative","integer","BigInt","decimal","decimalLen","length","Object","defineProperty","prototype","get","enumerable","configurable","getMark","getIntegerStr","toString","getDecimalStr","padStart","alignDecimal","decimalLength","padEnd","negate","numStr","startsWith","slice","add","offset","isInvalid","maxDecimalLength","Math","max","thisAlignedDecimal","offsetAlignedDecimal","valueStr","negativeStr","hydrateValueStr","equals","target","less","toNumber","NaN","Number","options","safe","precision","result","fullStr","toFixed","NumberDecimal","number","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","maxPrecision","getDecimal","cutOnly","separator","precisionDecimalStr","numberWithoutDecimal","advancedNum","advancedDecimal","repeat"],"sources":["D:/Code/ceo-copilot-frontend/node_modules/@arco-design/web-react/es/InputNumber/Decimal.js"],"sourcesContent":["var __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport { toSafeString, trimNumber, validateNumber, getNumberPrecision, supportBigInt, } from './utils';\nvar BigIntDecimal = /** @class */ (function () {\n    function BigIntDecimal(value) {\n        this.origin = '';\n        this.origin = String(value);\n        if ((!value && value !== 0) || !this.origin.trim()) {\n            this.isEmpty = true;\n            return;\n        }\n        if (value === '-') {\n            this.isNaN = true;\n            return;\n        }\n        var safeValueString = toSafeString(value);\n        if (validateNumber(safeValueString)) {\n            var _a = trimNumber(safeValueString), negative = _a.negative, trimStr = _a.trimStr;\n            var _b = __read(trimStr.split('.'), 2), integerStr = _b[0], _c = _b[1], decimalStr = _c === void 0 ? '0' : _c;\n            this.isNegative = negative;\n            this.integer = BigInt(integerStr);\n            this.decimal = BigInt(decimalStr);\n            this.decimalLen = decimalStr.length;\n        }\n        else {\n            this.isNaN = true;\n        }\n    }\n    Object.defineProperty(BigIntDecimal.prototype, \"isInvalid\", {\n        get: function () {\n            return this.isEmpty || this.isNaN;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    BigIntDecimal.prototype.getMark = function () {\n        return this.isNegative ? '-' : '';\n    };\n    BigIntDecimal.prototype.getIntegerStr = function () {\n        return this.integer.toString();\n    };\n    BigIntDecimal.prototype.getDecimalStr = function () {\n        return this.decimal.toString().padStart(this.decimalLen, '0');\n    };\n    BigIntDecimal.prototype.alignDecimal = function (decimalLength) {\n        return BigInt(\"\" + this.getMark() + this.getIntegerStr() + this.getDecimalStr().padEnd(decimalLength, '0'));\n    };\n    BigIntDecimal.prototype.negate = function () {\n        var numStr = this.toString();\n        return new BigIntDecimal(numStr.startsWith('-') ? numStr.slice(1) : \"-\" + numStr);\n    };\n    BigIntDecimal.prototype.add = function (value) {\n        var offset = new BigIntDecimal(value);\n        if (offset.isInvalid) {\n            return this;\n        }\n        if (this.isInvalid) {\n            return offset;\n        }\n        var maxDecimalLength = Math.max(this.decimalLen, offset.decimalLen);\n        var thisAlignedDecimal = this.alignDecimal(maxDecimalLength);\n        var offsetAlignedDecimal = offset.alignDecimal(maxDecimalLength);\n        var valueStr = (thisAlignedDecimal + offsetAlignedDecimal).toString();\n        var _a = trimNumber(valueStr), negativeStr = _a.negativeStr, trimStr = _a.trimStr;\n        var hydrateValueStr = \"\" + negativeStr + trimStr.padStart(maxDecimalLength + 1, '0');\n        return new BigIntDecimal(hydrateValueStr.slice(0, -maxDecimalLength) + \".\" + hydrateValueStr.slice(-maxDecimalLength));\n    };\n    BigIntDecimal.prototype.equals = function (target) {\n        return this.toString() === (target === null || target === void 0 ? void 0 : target.toString());\n    };\n    BigIntDecimal.prototype.less = function (target) {\n        return this.isInvalid || target.isInvalid\n            ? false\n            : this.add(target.negate().toString()).toNumber() < 0;\n    };\n    BigIntDecimal.prototype.toNumber = function () {\n        return this.isNaN ? NaN : Number(this.toString());\n    };\n    BigIntDecimal.prototype.toString = function (options) {\n        if (options === void 0) { options = { safe: true }; }\n        var safe = options.safe, precision = options.precision;\n        var result = safe\n            ? this.isInvalid\n                ? ''\n                : trimNumber(\"\" + this.getMark() + this.getIntegerStr() + \".\" + this.getDecimalStr()).fullStr\n            : this.origin;\n        return typeof precision === 'number' ? toFixed(result, precision) : result;\n    };\n    return BigIntDecimal;\n}());\nvar NumberDecimal = /** @class */ (function () {\n    function NumberDecimal(value) {\n        this.origin = '';\n        this.origin = String(value);\n        this.number = Number(value);\n        if ((!value && value !== 0) || !this.origin.trim()) {\n            this.isEmpty = true;\n        }\n        else {\n            this.isNaN = Number.isNaN(this.number);\n        }\n    }\n    Object.defineProperty(NumberDecimal.prototype, \"isInvalid\", {\n        get: function () {\n            return this.isEmpty || this.isNaN;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    NumberDecimal.prototype.negate = function () {\n        return new NumberDecimal(-this.toNumber());\n    };\n    NumberDecimal.prototype.equals = function (target) {\n        return this.toNumber() === (target === null || target === void 0 ? void 0 : target.toNumber());\n    };\n    NumberDecimal.prototype.less = function (target) {\n        return this.isInvalid || target.isInvalid\n            ? false\n            : this.add(target.negate().toString()).toNumber() < 0;\n    };\n    NumberDecimal.prototype.add = function (value) {\n        var offset = new NumberDecimal(value);\n        if (offset.isInvalid) {\n            return this;\n        }\n        if (this.isInvalid) {\n            return offset;\n        }\n        var result = this.number + offset.number;\n        if (result > Number.MAX_SAFE_INTEGER) {\n            return new NumberDecimal(Number.MAX_SAFE_INTEGER);\n        }\n        if (result < Number.MIN_SAFE_INTEGER) {\n            return new NumberDecimal(Number.MIN_SAFE_INTEGER);\n        }\n        var maxPrecision = Math.max(getNumberPrecision(this.number), getNumberPrecision(offset.number));\n        return new NumberDecimal(result.toFixed(maxPrecision));\n    };\n    NumberDecimal.prototype.toNumber = function () {\n        return this.number;\n    };\n    NumberDecimal.prototype.toString = function (options) {\n        if (options === void 0) { options = { safe: true }; }\n        var safe = options.safe, precision = options.precision;\n        var result = safe ? (this.isInvalid ? '' : toSafeString(this.number)) : this.origin;\n        return typeof precision === 'number' ? toFixed(result, precision) : result;\n    };\n    return NumberDecimal;\n}());\nexport function getDecimal(value) {\n    return supportBigInt() ? new BigIntDecimal(value) : new NumberDecimal(value);\n}\n/**\n * Replace String.prototype.toFixed like Math.round\n * If cutOnly is true, just slice the tail\n * e.g. Decimal.toFixed(0.15) will return 0.2, not 0.1\n */\nexport function toFixed(numStr, precision, cutOnly) {\n    if (cutOnly === void 0) { cutOnly = false; }\n    if (numStr === '') {\n        return '';\n    }\n    var separator = '.';\n    var _a = trimNumber(numStr), negativeStr = _a.negativeStr, integerStr = _a.integerStr, decimalStr = _a.decimalStr;\n    var precisionDecimalStr = \"\" + separator + decimalStr;\n    var numberWithoutDecimal = \"\" + negativeStr + integerStr;\n    if (precision >= 0) {\n        var advancedNum = Number(decimalStr[precision]);\n        if (advancedNum >= 5 && !cutOnly) {\n            var advancedDecimal = getDecimal(numStr).add(negativeStr + \"0.\" + '0'.repeat(precision) + (10 - advancedNum));\n            return toFixed(advancedDecimal.toString(), precision, cutOnly);\n        }\n        return precision === 0\n            ? numberWithoutDecimal\n            : \"\" + numberWithoutDecimal + separator + decimalStr\n                .padEnd(precision, '0')\n                .slice(0, precision);\n    }\n    return \"\" + numberWithoutDecimal + (precisionDecimalStr === '.0' ? '' : precisionDecimalStr);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}