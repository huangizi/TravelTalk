{"ast":null,"code":"import _slicedToArray from\"D:/Code/EchoGPT-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{Card,PageHeader,Input,Button}from\"@arco-design/web-react\";import Row from\"@arco-design/web-react/es/Grid/row\";import chatgpt from\"../../../assets/icon/chatgpt.png\";import React,{useState}from\"react\";import Col from\"@arco-design/web-react/es/Grid/col\";import _ from\"lodash\";import ChatBotCard from\"../../../components/ChatBotCard\";import chatBotItem from\"../../../consts/ChatBotItem\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ChatBot(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),select=_useState2[0],setSelect=_useState2[1];var _useState3=useState([{author:\"Qi\",avator:chatgpt,content:\"Hello! I'm Lu Qi. Glad to meet you here.\"}]),_useState4=_slicedToArray(_useState3,2),historyMessage=_useState4[0],setHistoryMessage=_useState4[1];var selectCard=function selectCard(data){setSelect(data);};return/*#__PURE__*/_jsx(Card,{bordered:false,className:\"content-card\",children:/*#__PURE__*/_jsx(PageHeader,{style:{background:'var(--color-bg-2)'},title:/*#__PURE__*/_jsx(\"div\",{className:\"title\",children:\"Chat Bot\"}),subTitle:/*#__PURE__*/_jsx(\"div\",{className:\"text\",children:\"Enjoy chat with Bot \\uD83D\\uDCAC (coming soon)\"}),extra:/*#__PURE__*/_jsx(\"div\",{children:select?/*#__PURE__*/_jsx(Button,{type:\"primary\",shape:\"round\",onClick:function onClick(){selectCard(false);},children:\"back\"}):null}),children:select?/*#__PURE__*/_jsxs(\"div\",{className:\"message-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"message-main\",children:_.map(historyMessage,function(item){return/*#__PURE__*/_jsx(\"div\",{className:\"message-left\",children:/*#__PURE__*/_jsx(\"div\",{className:\"bubble-text\",children:/*#__PURE__*/_jsx(\"p\",{children:item.content})})});})}),/*#__PURE__*/_jsx(Card,{bordered:false,className:\"chat-card\",style:{width:\"100%\"},children:/*#__PURE__*/_jsxs(Row,{gutter:12,children:[/*#__PURE__*/_jsx(Col,{span:22,children:/*#__PURE__*/_jsx(Input.TextArea,{autoSize:{minRows:2,maxRows:2},className:\"chat-input\"})}),/*#__PURE__*/_jsx(Col,{span:2,style:{marginTop:12},children:/*#__PURE__*/_jsx(Button,{htmlType:\"submit\",shape:\"round\",type:\"primary\",children:\"send\"})})]})})]}):/*#__PURE__*/_jsx(Row,{style:{margin:12},children:_.map(chatBotItem,function(item){return/*#__PURE__*/_jsx(Col,{span:8,children:/*#__PURE__*/_jsx(ChatBotCard,{selectCard:selectCard,item:item})});})})})});}export default ChatBot;","map":{"version":3,"names":["Card","PageHeader","Input","Button","Row","chatgpt","React","useState","Col","_","ChatBotCard","chatBotItem","jsx","_jsx","jsxs","_jsxs","ChatBot","_useState","_useState2","_slicedToArray","select","setSelect","_useState3","author","avator","content","_useState4","historyMessage","setHistoryMessage","selectCard","data","bordered","className","children","style","background","title","subTitle","extra","type","shape","onClick","map","item","width","gutter","span","TextArea","autoSize","minRows","maxRows","marginTop","htmlType","margin"],"sources":["D:/Code/EchoGPT-frontend/src/pages/Home/ChatBot/index.tsx"],"sourcesContent":["import {Card, PageHeader, Comment, Avatar, Input, Divider, Button} from \"@arco-design/web-react\";\r\nimport Row from \"@arco-design/web-react/es/Grid/row\";\r\nimport chatgpt from \"../../../assets/icon/chatgpt.png\"\r\nimport user from \"../../../assets/user.png\"\r\nimport React, {useState} from \"react\";\r\nimport Col from \"@arco-design/web-react/es/Grid/col\";\r\nimport _ from \"lodash\";\r\nimport PlaygroundCard from \"../../../components/PlaygroundCard\";\r\nimport ChatBotCard from \"../../../components/ChatBotCard\";\r\nimport chatBotItem from \"../../../consts/ChatBotItem\";\r\n\r\n\r\nfunction ChatBot() {\r\n    const [select,setSelect]=useState(false);\r\n    const [historyMessage, setHistoryMessage] = useState([\r\n        {\r\n            author: \"Qi\",\r\n            avator: chatgpt,\r\n            content: \"Hello! I'm Lu Qi. Glad to meet you here.\"\r\n        }\r\n    ])\r\n\r\n    const selectCard =(data:boolean)=>{\r\n        setSelect(data)\r\n    }\r\n\r\n    return (\r\n        <Card bordered={false} className=\"content-card\">\r\n            <PageHeader\r\n                style={{background: 'var(--color-bg-2)'}}\r\n                title={\r\n                    <div className=\"title\">\r\n                        Chat Bot\r\n                    </div>\r\n                }\r\n                subTitle={\r\n                    <div className=\"text\">\r\n                        Enjoy chat with Bot ðŸ’¬ (coming soon)\r\n                    </div>\r\n                }\r\n                extra={\r\n                    <div>\r\n                        {\r\n                            select?\r\n                                <Button type=\"primary\" shape=\"round\" onClick={()=>{selectCard(false)}}>back</Button>:null\r\n                        }\r\n                    </div>\r\n\r\n                }\r\n            >\r\n                {\r\n                    select ?\r\n                        <div className=\"message-container\">\r\n                            <div className=\"message-main\">\r\n                                {\r\n                                    _.map(historyMessage, (item) => {\r\n                                        return (\r\n                                            <div className=\"message-left\">\r\n                                                <div className=\"bubble-text\">\r\n                                                    <p>{item.content}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                            <Card bordered={false} className=\"chat-card\" style={{width: \"100%\"}}>\r\n                                <Row gutter={12}>\r\n                                    <Col span={22}>\r\n                                        <Input.TextArea autoSize={{minRows: 2, maxRows: 2}} className=\"chat-input\"/>\r\n                                    </Col>\r\n                                    <Col span={2} style={{marginTop: 12}}>\r\n                                        <Button htmlType=\"submit\" shape=\"round\" type='primary'>send</Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card>\r\n                        </div> :\r\n\r\n                        <Row style={{margin: 12}}>\r\n                            {\r\n                                _.map(chatBotItem, (item: any) => {\r\n                                    return (\r\n                                        <Col span={8}>\r\n                                            <ChatBotCard selectCard={selectCard} item={item}/>\r\n                                        </Col>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Row>\r\n                }\r\n            </PageHeader>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default ChatBot;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}