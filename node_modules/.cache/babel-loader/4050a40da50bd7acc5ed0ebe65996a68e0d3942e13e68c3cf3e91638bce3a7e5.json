{"ast":null,"code":"// Less lighten\nfunction hexToRgb(hex) {\n  var rgb = [];\n  var _hex = hex.substr(1);\n  // converts #abc to #aabbcc\n  if (hex.length === 3) {\n    _hex = hex.replace(/(.)/g, '$1$1');\n  }\n  _hex.replace(/../g, function (color) {\n    rgb.push(parseInt(color, 0x10));\n  });\n  return {\n    r: rgb[0],\n    g: rgb[1],\n    b: rgb[2],\n    rgb: \"rgb(\" + rgb.join(',') + \")\"\n  };\n}\nfunction getRgb(color) {\n  var rgb = hexToRgb(color);\n  return {\n    r: rgb.r,\n    g: rgb.g,\n    b: rgb.b\n  };\n}\nfunction getHsl(color) {\n  var rgb = getRgb(color);\n  var hsl = rgbToHsl(rgb.r, rgb.g, rgb.b);\n  return {\n    h: hsl.h,\n    s: hsl.s,\n    l: hsl.l\n  };\n}\nfunction rgbToHsl(r, g, b) {\n  var _r = r / 255;\n  var _g = g / 255;\n  var _b = b / 255;\n  var max = Math.max(_r, _g, _b);\n  var min = Math.min(_r, _g, _b);\n  var l = (max + min) / 2;\n  var h;\n  var s;\n  if (max === min) {\n    h = 0;\n    s = 0;\n  } else {\n    var d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    switch (max) {\n      case _r:\n        h = (_g - _b) / d + (_g < _b ? 6 : 0);\n        break;\n      case _g:\n        h = (_b - _r) / d + 2;\n        break;\n      case _b:\n        h = (_r - _g) / d + 4;\n        break;\n      default:\n        break;\n    }\n    h /= 6;\n  }\n  return {\n    h: h,\n    s: s,\n    l: l,\n    hsl: \"hsl(\" + h * 360 + \", \" + s * 100 + \"%, \" + l * 100 + \"%)\"\n  };\n}\nexport function lighten(color, percent) {\n  var hsl = getHsl(color);\n  var h = +hsl.h;\n  var s = +hsl.s;\n  var l = +hsl.l * 100 + +percent;\n  // return `hsl(${h * 360}, ${s * 100}%, ${l}%)`;\n  var res = hsltorgb([h * 360, s * 100, l]);\n  return res.join(',');\n}\n// copy from https://github.com/Qix-/color-convert/blob/master/conversions.js\nexport function hsltorgb(hsl) {\n  var h = hsl[0] / 360;\n  var s = hsl[1] / 100;\n  var l = hsl[2] / 100;\n  var t2;\n  var t3;\n  var val;\n  if (s === 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n  if (l < 0.5) {\n    t2 = l * (1 + s);\n  } else {\n    t2 = l + s - l * s;\n  }\n  var t1 = 2 * l - t2;\n  var rgb = [0, 0, 0];\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * -(i - 1);\n    if (t3 < 0) {\n      t3++;\n    }\n    if (t3 > 1) {\n      t3--;\n    }\n    if (6 * t3 < 1) {\n      val = t1 + (t2 - t1) * 6 * t3;\n    } else if (2 * t3 < 1) {\n      val = t2;\n    } else if (3 * t3 < 2) {\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    } else {\n      val = t1;\n    }\n    rgb[i] = val * 255;\n  }\n  return rgb;\n}","map":{"version":3,"names":["hexToRgb","hex","rgb","_hex","substr","length","replace","color","push","parseInt","r","g","b","join","getRgb","getHsl","hsl","rgbToHsl","h","s","l","_r","_g","_b","max","Math","min","d","lighten","percent","res","hsltorgb","t2","t3","val","t1","i"],"sources":["D:/Code/ceo-copilot-frontend/node_modules/@arco-design/web-react/es/ConfigProvider/util.js"],"sourcesContent":["// Less lighten\nfunction hexToRgb(hex) {\n    var rgb = [];\n    var _hex = hex.substr(1);\n    // converts #abc to #aabbcc\n    if (hex.length === 3) {\n        _hex = hex.replace(/(.)/g, '$1$1');\n    }\n    _hex.replace(/../g, function (color) {\n        rgb.push(parseInt(color, 0x10));\n    });\n    return {\n        r: rgb[0],\n        g: rgb[1],\n        b: rgb[2],\n        rgb: \"rgb(\" + rgb.join(',') + \")\",\n    };\n}\nfunction getRgb(color) {\n    var rgb = hexToRgb(color);\n    return { r: rgb.r, g: rgb.g, b: rgb.b };\n}\nfunction getHsl(color) {\n    var rgb = getRgb(color);\n    var hsl = rgbToHsl(rgb.r, rgb.g, rgb.b);\n    return { h: hsl.h, s: hsl.s, l: hsl.l };\n}\nfunction rgbToHsl(r, g, b) {\n    var _r = r / 255;\n    var _g = g / 255;\n    var _b = b / 255;\n    var max = Math.max(_r, _g, _b);\n    var min = Math.min(_r, _g, _b);\n    var l = (max + min) / 2;\n    var h;\n    var s;\n    if (max === min) {\n        h = 0;\n        s = 0;\n    }\n    else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n            case _r:\n                h = (_g - _b) / d + (_g < _b ? 6 : 0);\n                break;\n            case _g:\n                h = (_b - _r) / d + 2;\n                break;\n            case _b:\n                h = (_r - _g) / d + 4;\n                break;\n            default:\n                break;\n        }\n        h /= 6;\n    }\n    return {\n        h: h,\n        s: s,\n        l: l,\n        hsl: \"hsl(\" + h * 360 + \", \" + s * 100 + \"%, \" + l * 100 + \"%)\",\n    };\n}\nexport function lighten(color, percent) {\n    var hsl = getHsl(color);\n    var h = +hsl.h;\n    var s = +hsl.s;\n    var l = +hsl.l * 100 + +percent;\n    // return `hsl(${h * 360}, ${s * 100}%, ${l}%)`;\n    var res = hsltorgb([h * 360, s * 100, l]);\n    return res.join(',');\n}\n// copy from https://github.com/Qix-/color-convert/blob/master/conversions.js\nexport function hsltorgb(hsl) {\n    var h = hsl[0] / 360;\n    var s = hsl[1] / 100;\n    var l = hsl[2] / 100;\n    var t2;\n    var t3;\n    var val;\n    if (s === 0) {\n        val = l * 255;\n        return [val, val, val];\n    }\n    if (l < 0.5) {\n        t2 = l * (1 + s);\n    }\n    else {\n        t2 = l + s - l * s;\n    }\n    var t1 = 2 * l - t2;\n    var rgb = [0, 0, 0];\n    for (var i = 0; i < 3; i++) {\n        t3 = h + (1 / 3) * -(i - 1);\n        if (t3 < 0) {\n            t3++;\n        }\n        if (t3 > 1) {\n            t3--;\n        }\n        if (6 * t3 < 1) {\n            val = t1 + (t2 - t1) * 6 * t3;\n        }\n        else if (2 * t3 < 1) {\n            val = t2;\n        }\n        else if (3 * t3 < 2) {\n            val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n        }\n        else {\n            val = t1;\n        }\n        rgb[i] = val * 255;\n    }\n    return rgb;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}