{"ast":null,"code":"import cs from '../../_util/classNames';\nimport { isArray } from '../../_util/is';\nimport { getNow, getSortedDayjsArray } from '../../_util/dayjs';\nimport { getAvailableDayjsLength } from '../util';\nfunction getDateValue(date, index) {\n  if (!date) {\n    return undefined;\n  }\n  if (isArray(date)) {\n    return date[index];\n  }\n}\nexport default function useClassName(props) {\n  var prefixCls = props.prefixCls,\n    value = props.value,\n    rangeValues = props.rangeValues,\n    valueShowHover = props.valueShowHover,\n    isSameTime = props.isSameTime,\n    mode = props.mode,\n    hideNotInViewDates = props.hideNotInViewDates;\n  var selectedLength = getAvailableDayjsLength(rangeValues);\n  var hoverLength = getAvailableDayjsLength(valueShowHover);\n  var sortedRangeValues = selectedLength !== 2 && hoverLength === 2 ? getSortedDayjsArray(valueShowHover) : rangeValues;\n  var sortedHoverRangeValues = selectedLength === 2 ? getSortedDayjsArray(valueShowHover) : [];\n  function isInRange(current, startDate, endDate) {\n    // show placeholder range\n    // if (!startDate || !endDate) {\n    //   if (startDate) {\n    //     return isSameTime(current, startDate) || current.isAfter(startDate);\n    //   }\n    //   if (endDate) {\n    //     return isSameTime(current, endDate) || current.isBefore(endDate);\n    //   }\n    //   return false;\n    // }\n    if (startDate && endDate) {\n      return isSameTime(current, startDate) || isSameTime(current, endDate) || current.isBetween(startDate, endDate, null);\n    }\n  }\n  return function getCellClassName(cellDateObj, disabled, utcOffset, timezone) {\n    var _a;\n    var rangeStart = getDateValue(sortedRangeValues, 0);\n    var rangeEnd = getDateValue(sortedRangeValues, 1);\n    var hoverRangeStart = getDateValue(sortedHoverRangeValues, 0);\n    var hoverRangeEnd = getDateValue(sortedHoverRangeValues, 1);\n    var isInView = !cellDateObj.isPrev && !cellDateObj.isNext;\n    var selected = value && isSameTime(cellDateObj.time, value);\n    var isToday = isSameTime(cellDateObj.time, getNow(utcOffset, timezone));\n    var checkIsInView = mode !== 'week' ? isInView : true;\n    if (mode === 'week') {\n      isToday = getNow(utcOffset, timezone).isSame(cellDateObj.time, 'date');\n    }\n    if (mode === 'quarter') {\n      isToday = getNow(utcOffset, timezone).isSame(cellDateObj.time, 'quarter');\n    }\n    function getIsRangeStartOrEnd(v) {\n      return checkIsInView && !disabled && v && isSameTime(cellDateObj.time, v);\n    }\n    var isRangeStart = getIsRangeStartOrEnd(rangeStart);\n    var isRangeEnd = getIsRangeStartOrEnd(rangeEnd);\n    var isRangeStartSelected = getIsRangeStartOrEnd(getDateValue(rangeValues, 0));\n    var isRangeEndSelected = getIsRangeStartOrEnd(getDateValue(rangeValues, 1));\n    var isHoverRangeStart = getIsRangeStartOrEnd(hoverRangeStart);\n    var isHoverRangeEnd = getIsRangeStartOrEnd(hoverRangeEnd);\n    var isRangeEdgeInHoverRange = false;\n    if (isRangeStart) {\n      isRangeEdgeInHoverRange = hoverRangeStart && rangeStart && hoverRangeStart.isBefore(rangeStart) && isInRange(rangeStart, hoverRangeStart, hoverRangeEnd);\n    } else if (isRangeEnd) {\n      isRangeEdgeInHoverRange = hoverRangeEnd && rangeEnd && hoverRangeEnd.isAfter(rangeEnd) && isInRange(rangeEnd, hoverRangeStart, hoverRangeEnd);\n    }\n    var isHoverRangeEdgeInRange = false;\n    if (isHoverRangeStart) {\n      isHoverRangeEdgeInRange = hoverRangeStart && rangeStart && rangeStart.isBefore(hoverRangeStart) && isInRange(hoverRangeStart, rangeStart, rangeEnd);\n    } else if (isHoverRangeEnd) {\n      isHoverRangeEdgeInRange = hoverRangeEnd && rangeEnd && rangeEnd.isAfter(hoverRangeEnd) && isInRange(hoverRangeEnd, rangeStart, rangeEnd);\n    }\n    return cs(prefixCls + \"-cell\", (_a = {}, _a[prefixCls + \"-cell-disabled\"] = disabled, _a[prefixCls + \"-cell-hidden\"] = hideNotInViewDates && !isInView, _a[prefixCls + \"-cell-in-view\"] = isInView, _a[prefixCls + \"-cell-today\"] = isToday && isInView, _a[prefixCls + \"-cell-selected\"] = selected || isRangeStartSelected || isRangeEndSelected, _a[prefixCls + \"-cell-range-start\"] = isRangeStart, _a[prefixCls + \"-cell-range-end\"] = isRangeEnd, _a[prefixCls + \"-cell-in-range\"] = checkIsInView && !disabled && isInRange(cellDateObj.time, rangeStart, rangeEnd), _a[prefixCls + \"-cell-hover-range-start\"] = isHoverRangeStart, _a[prefixCls + \"-cell-hover-range-end\"] = isHoverRangeEnd, _a[prefixCls + \"-cell-hover-in-range\"] = checkIsInView && !disabled && isInRange(cellDateObj.time, hoverRangeStart, hoverRangeEnd), _a[prefixCls + \"-cell-range-edge-in-hover-range\"] = isRangeEdgeInHoverRange, _a[prefixCls + \"-cell-hover-range-edge-in-range\"] = isHoverRangeEdgeInRange, _a));\n  };\n}","map":{"version":3,"names":["cs","isArray","getNow","getSortedDayjsArray","getAvailableDayjsLength","getDateValue","date","index","undefined","useClassName","props","prefixCls","value","rangeValues","valueShowHover","isSameTime","mode","hideNotInViewDates","selectedLength","hoverLength","sortedRangeValues","sortedHoverRangeValues","isInRange","current","startDate","endDate","isBetween","getCellClassName","cellDateObj","disabled","utcOffset","timezone","_a","rangeStart","rangeEnd","hoverRangeStart","hoverRangeEnd","isInView","isPrev","isNext","selected","time","isToday","checkIsInView","isSame","getIsRangeStartOrEnd","v","isRangeStart","isRangeEnd","isRangeStartSelected","isRangeEndSelected","isHoverRangeStart","isHoverRangeEnd","isRangeEdgeInHoverRange","isBefore","isAfter","isHoverRangeEdgeInRange"],"sources":["D:/Code/LegalGPT-frontend/node_modules/@arco-design/web-react/es/DatePicker/hooks/useCellClassName.js"],"sourcesContent":["import cs from '../../_util/classNames';\nimport { isArray } from '../../_util/is';\nimport { getNow, getSortedDayjsArray } from '../../_util/dayjs';\nimport { getAvailableDayjsLength } from '../util';\nfunction getDateValue(date, index) {\n    if (!date) {\n        return undefined;\n    }\n    if (isArray(date)) {\n        return date[index];\n    }\n}\nexport default function useClassName(props) {\n    var prefixCls = props.prefixCls, value = props.value, rangeValues = props.rangeValues, valueShowHover = props.valueShowHover, isSameTime = props.isSameTime, mode = props.mode, hideNotInViewDates = props.hideNotInViewDates;\n    var selectedLength = getAvailableDayjsLength(rangeValues);\n    var hoverLength = getAvailableDayjsLength(valueShowHover);\n    var sortedRangeValues = selectedLength !== 2 && hoverLength === 2 ? getSortedDayjsArray(valueShowHover) : rangeValues;\n    var sortedHoverRangeValues = selectedLength === 2 ? getSortedDayjsArray(valueShowHover) : [];\n    function isInRange(current, startDate, endDate) {\n        // show placeholder range\n        // if (!startDate || !endDate) {\n        //   if (startDate) {\n        //     return isSameTime(current, startDate) || current.isAfter(startDate);\n        //   }\n        //   if (endDate) {\n        //     return isSameTime(current, endDate) || current.isBefore(endDate);\n        //   }\n        //   return false;\n        // }\n        if (startDate && endDate) {\n            return (isSameTime(current, startDate) ||\n                isSameTime(current, endDate) ||\n                current.isBetween(startDate, endDate, null));\n        }\n    }\n    return function getCellClassName(cellDateObj, disabled, utcOffset, timezone) {\n        var _a;\n        var rangeStart = getDateValue(sortedRangeValues, 0);\n        var rangeEnd = getDateValue(sortedRangeValues, 1);\n        var hoverRangeStart = getDateValue(sortedHoverRangeValues, 0);\n        var hoverRangeEnd = getDateValue(sortedHoverRangeValues, 1);\n        var isInView = !cellDateObj.isPrev && !cellDateObj.isNext;\n        var selected = value && isSameTime(cellDateObj.time, value);\n        var isToday = isSameTime(cellDateObj.time, getNow(utcOffset, timezone));\n        var checkIsInView = mode !== 'week' ? isInView : true;\n        if (mode === 'week') {\n            isToday = getNow(utcOffset, timezone).isSame(cellDateObj.time, 'date');\n        }\n        if (mode === 'quarter') {\n            isToday = getNow(utcOffset, timezone).isSame(cellDateObj.time, 'quarter');\n        }\n        function getIsRangeStartOrEnd(v) {\n            return checkIsInView && !disabled && v && isSameTime(cellDateObj.time, v);\n        }\n        var isRangeStart = getIsRangeStartOrEnd(rangeStart);\n        var isRangeEnd = getIsRangeStartOrEnd(rangeEnd);\n        var isRangeStartSelected = getIsRangeStartOrEnd(getDateValue(rangeValues, 0));\n        var isRangeEndSelected = getIsRangeStartOrEnd(getDateValue(rangeValues, 1));\n        var isHoverRangeStart = getIsRangeStartOrEnd(hoverRangeStart);\n        var isHoverRangeEnd = getIsRangeStartOrEnd(hoverRangeEnd);\n        var isRangeEdgeInHoverRange = false;\n        if (isRangeStart) {\n            isRangeEdgeInHoverRange =\n                hoverRangeStart &&\n                    rangeStart &&\n                    hoverRangeStart.isBefore(rangeStart) &&\n                    isInRange(rangeStart, hoverRangeStart, hoverRangeEnd);\n        }\n        else if (isRangeEnd) {\n            isRangeEdgeInHoverRange =\n                hoverRangeEnd &&\n                    rangeEnd &&\n                    hoverRangeEnd.isAfter(rangeEnd) &&\n                    isInRange(rangeEnd, hoverRangeStart, hoverRangeEnd);\n        }\n        var isHoverRangeEdgeInRange = false;\n        if (isHoverRangeStart) {\n            isHoverRangeEdgeInRange =\n                hoverRangeStart &&\n                    rangeStart &&\n                    rangeStart.isBefore(hoverRangeStart) &&\n                    isInRange(hoverRangeStart, rangeStart, rangeEnd);\n        }\n        else if (isHoverRangeEnd) {\n            isHoverRangeEdgeInRange =\n                hoverRangeEnd &&\n                    rangeEnd &&\n                    rangeEnd.isAfter(hoverRangeEnd) &&\n                    isInRange(hoverRangeEnd, rangeStart, rangeEnd);\n        }\n        return cs(prefixCls + \"-cell\", (_a = {},\n            _a[prefixCls + \"-cell-disabled\"] = disabled,\n            _a[prefixCls + \"-cell-hidden\"] = hideNotInViewDates && !isInView,\n            _a[prefixCls + \"-cell-in-view\"] = isInView,\n            _a[prefixCls + \"-cell-today\"] = isToday && isInView,\n            _a[prefixCls + \"-cell-selected\"] = selected || isRangeStartSelected || isRangeEndSelected,\n            _a[prefixCls + \"-cell-range-start\"] = isRangeStart,\n            _a[prefixCls + \"-cell-range-end\"] = isRangeEnd,\n            _a[prefixCls + \"-cell-in-range\"] = checkIsInView && !disabled && isInRange(cellDateObj.time, rangeStart, rangeEnd),\n            _a[prefixCls + \"-cell-hover-range-start\"] = isHoverRangeStart,\n            _a[prefixCls + \"-cell-hover-range-end\"] = isHoverRangeEnd,\n            _a[prefixCls + \"-cell-hover-in-range\"] = checkIsInView && !disabled && isInRange(cellDateObj.time, hoverRangeStart, hoverRangeEnd),\n            _a[prefixCls + \"-cell-range-edge-in-hover-range\"] = isRangeEdgeInHoverRange,\n            _a[prefixCls + \"-cell-hover-range-edge-in-range\"] = isHoverRangeEdgeInRange,\n            _a));\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}