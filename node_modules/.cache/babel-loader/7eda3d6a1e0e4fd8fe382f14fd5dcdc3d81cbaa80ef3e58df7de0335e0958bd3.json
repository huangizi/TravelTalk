{"ast":null,"code":"var __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nimport { useState, useContext, useEffect, useRef } from 'react';\nimport get from 'lodash/get';\nimport { isArray, isString } from '../../_util/is';\nimport { FormContext } from '../context';\nimport warn from '../../_util/warning';\nvar useWatch = function (field, form) {\n  var formCtx = useContext(FormContext);\n  var formInstance = form || formCtx.store;\n  var _a = __read(useState(function () {\n      var fieldValues = formInstance === null || formInstance === void 0 ? void 0 : formInstance.getFieldsValue([].concat(field));\n      if (isString(field)) {\n        return get(fieldValues, field);\n      }\n      return fieldValues;\n    }), 2),\n    value = _a[0],\n    setValue = _a[1];\n  //  if field change, get the real value from fieldRef.current\n  var fieldRef = useRef(field);\n  fieldRef.current = field;\n  var valueRef = useRef(JSON.stringify(value));\n  useEffect(function () {\n    if (!formInstance) {\n      warn(true, 'formInstance is not available');\n      return;\n    }\n    var registerWatcher = (formInstance === null || formInstance === void 0 ? void 0 : formInstance.getInnerMethods(true)).registerWatcher;\n    var updateValue = function () {\n      var field = fieldRef.current;\n      var formValues = formInstance.getFieldsValue([].concat(field));\n      var newValue = formValues;\n      if (!isArray(field)) {\n        newValue = get(formValues, field);\n      }\n      var newValueString = JSON.stringify(newValue);\n      if (valueRef.current !== newValueString) {\n        setValue(newValue);\n        valueRef.current = newValueString;\n      }\n    };\n    updateValue();\n    var cancelWatch = registerWatcher && registerWatcher(updateValue);\n    return function () {\n      cancelWatch && cancelWatch();\n    };\n  }, []);\n  return value;\n};\nexport default useWatch;","map":{"version":3,"names":["__read","o","n","m","Symbol","iterator","i","call","r","ar","e","next","done","push","value","error","useState","useContext","useEffect","useRef","get","isArray","isString","FormContext","warn","useWatch","field","form","formCtx","formInstance","store","_a","fieldValues","getFieldsValue","concat","setValue","fieldRef","current","valueRef","JSON","stringify","registerWatcher","getInnerMethods","updateValue","formValues","newValue","newValueString","cancelWatch"],"sources":["D:/Code/ceo-copilot-frontend/node_modules/@arco-design/web-react/es/Form/hooks/useWatch.js"],"sourcesContent":["var __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport { useState, useContext, useEffect, useRef } from 'react';\nimport get from 'lodash/get';\nimport { isArray, isString } from '../../_util/is';\nimport { FormContext } from '../context';\nimport warn from '../../_util/warning';\nvar useWatch = function (field, form) {\n    var formCtx = useContext(FormContext);\n    var formInstance = form || formCtx.store;\n    var _a = __read(useState(function () {\n        var fieldValues = formInstance === null || formInstance === void 0 ? void 0 : formInstance.getFieldsValue([].concat(field));\n        if (isString(field)) {\n            return get(fieldValues, field);\n        }\n        return fieldValues;\n    }), 2), value = _a[0], setValue = _a[1];\n    //  if field change, get the real value from fieldRef.current\n    var fieldRef = useRef(field);\n    fieldRef.current = field;\n    var valueRef = useRef(JSON.stringify(value));\n    useEffect(function () {\n        if (!formInstance) {\n            warn(true, 'formInstance is not available');\n            return;\n        }\n        var registerWatcher = (formInstance === null || formInstance === void 0 ? void 0 : formInstance.getInnerMethods(true)).registerWatcher;\n        var updateValue = function () {\n            var field = fieldRef.current;\n            var formValues = formInstance.getFieldsValue([].concat(field));\n            var newValue = formValues;\n            if (!isArray(field)) {\n                newValue = get(formValues, field);\n            }\n            var newValueString = JSON.stringify(newValue);\n            if (valueRef.current !== newValueString) {\n                setValue(newValue);\n                valueRef.current = newValueString;\n            }\n        };\n        updateValue();\n        var cancelWatch = registerWatcher && registerWatcher(updateValue);\n        return function () {\n            cancelWatch && cancelWatch();\n        };\n    }, []);\n    return value;\n};\nexport default useWatch;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}