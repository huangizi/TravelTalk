{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nimport { useState, useRef, useCallback } from 'react';\nimport isEqualWith from 'lodash/isEqualWith';\nimport { normalizeValueToArray } from '../utils';\nimport { isArray, isObject, isUndefined } from '../../_util/is';\nimport Tree from '../../Tree';\nimport { getCheckedKeysByInitKeys } from '../../Tree/util';\nimport useUpdate from '../../_util/hooks/useUpdate';\nexport var parseValue = function parseValue(v, key2nodeProps, valueMap) {\n  if (v === undefined || v === null) {\n    return [];\n  }\n  var value = isArray(v) ? v : [v];\n  return value.map(function (x) {\n    var result = isObject(x) ? __assign({}, x) : {\n      value: x,\n      label: undefined\n    };\n    var item = key2nodeProps[result.value];\n    if (item) {\n      result.label = result.label || item.title;\n      result.disabled = item.disabled;\n    } else if (isArray(valueMap)) {\n      var v_1 = valueMap.find(function (y) {\n        return y.value === result.value;\n      });\n      result = __assign(__assign({}, result), v_1);\n    }\n    if (isUndefined(result.label)) {\n      result.label = result.value;\n    }\n    return result;\n  });\n};\nvar getInitCheckKeys = function getInitCheckKeys(keys, key2nodeProps, indeterminateKeys, props) {\n  if (!props.treeCheckStrictly) {\n    var _a = getCheckedKeysByInitKeys(keys, key2nodeProps),\n      allCheckedKeys = _a.checkedKeys,\n      halfKeys = _a.indeterminateKeys;\n    var checkedKeys_1 = allCheckedKeys;\n    indeterminateKeys.current = halfKeys;\n    if (props.treeCheckedStrategy === Tree.SHOW_PARENT) {\n      checkedKeys_1 = checkedKeys_1.filter(function (x) {\n        var item = key2nodeProps[x];\n        if (!item || checkedKeys_1.indexOf(item.parentKey) === -1) {\n          return true;\n        }\n      });\n    } else if (props.treeCheckedStrategy === Tree.SHOW_CHILD) {\n      checkedKeys_1 = checkedKeys_1.filter(function (x) {\n        var item = key2nodeProps[x];\n        if (!item || !item.children || !item.children.length) {\n          return true;\n        }\n      });\n    }\n    return checkedKeys_1;\n  }\n  indeterminateKeys.current = [];\n  return keys;\n};\nvar useStateValue = function useStateValue(props, key2nodeProps, indeterminateKeys) {\n  var valueCopy = useRef([]);\n  var calcValue = function calcValue() {\n    var propsValue = props.value || props.defaultValue || [];\n    if (props.treeCheckable) {\n      var initCheckedKeys = getInitCheckKeys(normalizeValueToArray(propsValue), key2nodeProps, indeterminateKeys, props);\n      var parsedPropValue = parseValue(propsValue, key2nodeProps, valueCopy.current);\n      var parsedCheckedValue = parseValue(initCheckedKeys, key2nodeProps, parsedPropValue);\n      return parsedCheckedValue;\n    }\n    return parseValue(propsValue, key2nodeProps);\n  };\n  var _a = __read(useState(calcValue), 2),\n    value = _a[0],\n    _setValue = _a[1];\n  var setValue = function setValue(value) {\n    valueCopy.current = value;\n    _setValue(value);\n  };\n  useUpdate(function () {\n    var nextValue = calcValue();\n    if ('value' in props) {\n      if (props.labelInValue) {\n        // 以外部传入为准,只比较value\n        if (!isEqualWith(normalizeValueToArray(value), normalizeValueToArray(nextValue))) {\n          setValue(nextValue);\n        }\n      } else if (!isEqualWith(value, nextValue)) {\n        setValue(nextValue);\n      }\n    }\n  }, [props.treeCheckedStrategy, props.treeCheckStrictly, props.treeCheckable, props.value, key2nodeProps]);\n  var setStateValue = useCallback(function (newValue, extra) {\n    var onChange = props.onChange,\n      labelInValue = props.labelInValue;\n    var multiple = props.multiple || props.treeCheckable;\n    if (!('value' in props)) {\n      setValue(newValue);\n    }\n    var tmp;\n    if (multiple) {\n      tmp = newValue.map(function (x) {\n        return labelInValue ? {\n          label: x.label,\n          value: x.value\n        } : x.value;\n      });\n    } else {\n      tmp = labelInValue ? newValue[0] : newValue[0] && newValue[0].value;\n    }\n    onChange && onChange(tmp, extra);\n  }, [props.onChange, props.labelInValue, props.multiple, props.treeCheckable, props.value]);\n  return [value, setStateValue];\n};\nexport default useStateValue;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__read","o","m","Symbol","iterator","r","ar","e","next","done","push","value","error","useState","useRef","useCallback","isEqualWith","normalizeValueToArray","isArray","isObject","isUndefined","Tree","getCheckedKeysByInitKeys","useUpdate","parseValue","v","key2nodeProps","valueMap","undefined","map","x","result","label","item","title","disabled","v_1","find","y","getInitCheckKeys","keys","indeterminateKeys","props","treeCheckStrictly","_a","allCheckedKeys","checkedKeys","halfKeys","checkedKeys_1","current","treeCheckedStrategy","SHOW_PARENT","filter","indexOf","parentKey","SHOW_CHILD","children","useStateValue","valueCopy","calcValue","propsValue","defaultValue","treeCheckable","initCheckedKeys","parsedPropValue","parsedCheckedValue","_setValue","setValue","nextValue","labelInValue","setStateValue","newValue","extra","onChange","multiple","tmp"],"sources":["D:/Code/EchoGPT-frontend/node_modules/@arco-design/web-react/es/TreeSelect/hook/useStateValue.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport { useState, useRef, useCallback } from 'react';\nimport isEqualWith from 'lodash/isEqualWith';\nimport { normalizeValueToArray } from '../utils';\nimport { isArray, isObject, isUndefined } from '../../_util/is';\nimport Tree from '../../Tree';\nimport { getCheckedKeysByInitKeys } from '../../Tree/util';\nimport useUpdate from '../../_util/hooks/useUpdate';\nexport var parseValue = function (v, key2nodeProps, valueMap) {\n    if (v === undefined || v === null) {\n        return [];\n    }\n    var value = isArray(v) ? v : [v];\n    return value.map(function (x) {\n        var result = isObject(x) ? __assign({}, x) : { value: x, label: undefined };\n        var item = key2nodeProps[result.value];\n        if (item) {\n            result.label = result.label || item.title;\n            result.disabled = item.disabled;\n        }\n        else if (isArray(valueMap)) {\n            var v_1 = valueMap.find(function (y) { return y.value === result.value; });\n            result = __assign(__assign({}, result), v_1);\n        }\n        if (isUndefined(result.label)) {\n            result.label = result.value;\n        }\n        return result;\n    });\n};\nvar getInitCheckKeys = function (keys, key2nodeProps, indeterminateKeys, props) {\n    if (!props.treeCheckStrictly) {\n        var _a = getCheckedKeysByInitKeys(keys, key2nodeProps), allCheckedKeys = _a.checkedKeys, halfKeys = _a.indeterminateKeys;\n        var checkedKeys_1 = allCheckedKeys;\n        indeterminateKeys.current = halfKeys;\n        if (props.treeCheckedStrategy === Tree.SHOW_PARENT) {\n            checkedKeys_1 = checkedKeys_1.filter(function (x) {\n                var item = key2nodeProps[x];\n                if (!item || checkedKeys_1.indexOf(item.parentKey) === -1) {\n                    return true;\n                }\n            });\n        }\n        else if (props.treeCheckedStrategy === Tree.SHOW_CHILD) {\n            checkedKeys_1 = checkedKeys_1.filter(function (x) {\n                var item = key2nodeProps[x];\n                if (!item || !item.children || !item.children.length) {\n                    return true;\n                }\n            });\n        }\n        return checkedKeys_1;\n    }\n    indeterminateKeys.current = [];\n    return keys;\n};\nvar useStateValue = function (props, key2nodeProps, indeterminateKeys) {\n    var valueCopy = useRef([]);\n    var calcValue = function () {\n        var propsValue = props.value || props.defaultValue || [];\n        if (props.treeCheckable) {\n            var initCheckedKeys = getInitCheckKeys(normalizeValueToArray(propsValue), key2nodeProps, indeterminateKeys, props);\n            var parsedPropValue = parseValue(propsValue, key2nodeProps, valueCopy.current);\n            var parsedCheckedValue = parseValue(initCheckedKeys, key2nodeProps, parsedPropValue);\n            return parsedCheckedValue;\n        }\n        return parseValue(propsValue, key2nodeProps);\n    };\n    var _a = __read(useState(calcValue), 2), value = _a[0], _setValue = _a[1];\n    var setValue = function (value) {\n        valueCopy.current = value;\n        _setValue(value);\n    };\n    useUpdate(function () {\n        var nextValue = calcValue();\n        if ('value' in props) {\n            if (props.labelInValue) {\n                // 以外部传入为准,只比较value\n                if (!isEqualWith(normalizeValueToArray(value), normalizeValueToArray(nextValue))) {\n                    setValue(nextValue);\n                }\n            }\n            else if (!isEqualWith(value, nextValue)) {\n                setValue(nextValue);\n            }\n        }\n    }, [\n        props.treeCheckedStrategy,\n        props.treeCheckStrictly,\n        props.treeCheckable,\n        props.value,\n        key2nodeProps,\n    ]);\n    var setStateValue = useCallback(function (newValue, extra) {\n        var onChange = props.onChange, labelInValue = props.labelInValue;\n        var multiple = props.multiple || props.treeCheckable;\n        if (!('value' in props)) {\n            setValue(newValue);\n        }\n        var tmp;\n        if (multiple) {\n            tmp = newValue.map(function (x) {\n                return labelInValue ? { label: x.label, value: x.value } : x.value;\n            });\n        }\n        else {\n            tmp = labelInValue ? newValue[0] : newValue[0] && newValue[0].value;\n        }\n        onChange && onChange(tmp, extra);\n    }, [props.onChange, props.labelInValue, props.multiple, props.treeCheckable, props.value]);\n    return [value, setStateValue];\n};\nexport default useStateValue;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}