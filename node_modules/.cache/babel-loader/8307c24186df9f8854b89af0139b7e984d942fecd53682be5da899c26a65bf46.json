{"ast":null,"code":"import cs from '../../_util/classNames';\nimport { isArray } from '../../_util/is';\nimport { getNow } from '../../_util/dayjs';\nfunction getDateValue(date, index) {\n  if (!date) {\n    return undefined;\n  }\n  if (isArray(date)) {\n    return date[index];\n  }\n}\nexport default function useClassName(props) {\n  var prefixCls = props.prefixCls,\n    mergedValue = props.mergedValue,\n    rangeValues = props.rangeValues,\n    hoverRangeValues = props.hoverRangeValues,\n    panel = props.panel,\n    isSameTime = props.isSameTime,\n    innerMode = props.innerMode;\n  function isInRange(current, startDate, endDate) {\n    if (!startDate || !endDate) {\n      return false;\n    }\n    return isSameTime(current, startDate) || isSameTime(current, endDate) || current.isBetween(startDate, endDate, null, '[]');\n  }\n  return function getCellClassName(cellDateObj, disabled) {\n    var _a;\n    var rangeStart = getDateValue(rangeValues, 0);\n    var rangeEnd = getDateValue(rangeValues, 1);\n    var hoverRangeStart = getDateValue(hoverRangeValues, 0);\n    var hoverRangeEnd = getDateValue(hoverRangeValues, 1);\n    var isInView = !cellDateObj.isPrev && !cellDateObj.isNext;\n    var rangeAvailable = isInView && panel;\n    var isRangeStart = rangeAvailable && rangeStart && isSameTime(cellDateObj.time, rangeStart);\n    var isRangeEnd = rangeAvailable && rangeEnd && isSameTime(cellDateObj.time, rangeEnd);\n    var nearRangeStart = hoverRangeStart && rangeStart && hoverRangeStart.isBefore(rangeStart);\n    var nearRangeEnd = rangeEnd && hoverRangeEnd && hoverRangeEnd.isAfter(rangeEnd);\n    var isHoverNearRange = nearRangeStart && isRangeStart || nearRangeEnd && isRangeEnd;\n    var isToday = isSameTime(cellDateObj.time, getNow());\n    if (!panel && innerMode === 'year') {\n      isToday = getNow().isSame(cellDateObj.time, 'date');\n    }\n    return cs(prefixCls + \"-cell\", (_a = {}, _a[prefixCls + \"-cell-in-view\"] = isInView, _a[prefixCls + \"-cell-today\"] = isToday, _a[prefixCls + \"-cell-selected\"] = mergedValue && isSameTime(cellDateObj.time, mergedValue), _a[prefixCls + \"-cell-range-start\"] = isRangeStart, _a[prefixCls + \"-cell-range-end\"] = isRangeEnd, _a[prefixCls + \"-cell-in-range\"] = rangeAvailable && isInRange(cellDateObj.time, rangeStart, rangeEnd), _a[prefixCls + \"-cell-in-range-near-hover\"] = isHoverNearRange, _a[prefixCls + \"-cell-hover-range-start\"] = rangeAvailable && hoverRangeStart && isSameTime(cellDateObj.time, hoverRangeStart), _a[prefixCls + \"-cell-hover-range-end\"] = rangeAvailable && hoverRangeEnd && isSameTime(cellDateObj.time, hoverRangeEnd), _a[prefixCls + \"-cell-hover-in-range\"] = rangeAvailable && isInRange(cellDateObj.time, hoverRangeStart, hoverRangeEnd), _a[prefixCls + \"-cell-disabled\"] = disabled, _a));\n  };\n}","map":{"version":3,"names":["cs","isArray","getNow","getDateValue","date","index","undefined","useClassName","props","prefixCls","mergedValue","rangeValues","hoverRangeValues","panel","isSameTime","innerMode","isInRange","current","startDate","endDate","isBetween","getCellClassName","cellDateObj","disabled","_a","rangeStart","rangeEnd","hoverRangeStart","hoverRangeEnd","isInView","isPrev","isNext","rangeAvailable","isRangeStart","time","isRangeEnd","nearRangeStart","isBefore","nearRangeEnd","isAfter","isHoverNearRange","isToday","isSame"],"sources":["D:/Code/EchoGPT-frontend/node_modules/@arco-design/web-react/es/Calendar/hooks/useCellClassName.js"],"sourcesContent":["import cs from '../../_util/classNames';\nimport { isArray } from '../../_util/is';\nimport { getNow } from '../../_util/dayjs';\nfunction getDateValue(date, index) {\n    if (!date) {\n        return undefined;\n    }\n    if (isArray(date)) {\n        return date[index];\n    }\n}\nexport default function useClassName(props) {\n    var prefixCls = props.prefixCls, mergedValue = props.mergedValue, rangeValues = props.rangeValues, hoverRangeValues = props.hoverRangeValues, panel = props.panel, isSameTime = props.isSameTime, innerMode = props.innerMode;\n    function isInRange(current, startDate, endDate) {\n        if (!startDate || !endDate) {\n            return false;\n        }\n        return (isSameTime(current, startDate) ||\n            isSameTime(current, endDate) ||\n            current.isBetween(startDate, endDate, null, '[]'));\n    }\n    return function getCellClassName(cellDateObj, disabled) {\n        var _a;\n        var rangeStart = getDateValue(rangeValues, 0);\n        var rangeEnd = getDateValue(rangeValues, 1);\n        var hoverRangeStart = getDateValue(hoverRangeValues, 0);\n        var hoverRangeEnd = getDateValue(hoverRangeValues, 1);\n        var isInView = !cellDateObj.isPrev && !cellDateObj.isNext;\n        var rangeAvailable = isInView && panel;\n        var isRangeStart = rangeAvailable && rangeStart && isSameTime(cellDateObj.time, rangeStart);\n        var isRangeEnd = rangeAvailable && rangeEnd && isSameTime(cellDateObj.time, rangeEnd);\n        var nearRangeStart = hoverRangeStart && rangeStart && hoverRangeStart.isBefore(rangeStart);\n        var nearRangeEnd = rangeEnd && hoverRangeEnd && hoverRangeEnd.isAfter(rangeEnd);\n        var isHoverNearRange = (nearRangeStart && isRangeStart) || (nearRangeEnd && isRangeEnd);\n        var isToday = isSameTime(cellDateObj.time, getNow());\n        if (!panel && innerMode === 'year') {\n            isToday = getNow().isSame(cellDateObj.time, 'date');\n        }\n        return cs(prefixCls + \"-cell\", (_a = {},\n            _a[prefixCls + \"-cell-in-view\"] = isInView,\n            _a[prefixCls + \"-cell-today\"] = isToday,\n            _a[prefixCls + \"-cell-selected\"] = mergedValue && isSameTime(cellDateObj.time, mergedValue),\n            _a[prefixCls + \"-cell-range-start\"] = isRangeStart,\n            _a[prefixCls + \"-cell-range-end\"] = isRangeEnd,\n            _a[prefixCls + \"-cell-in-range\"] = rangeAvailable && isInRange(cellDateObj.time, rangeStart, rangeEnd),\n            _a[prefixCls + \"-cell-in-range-near-hover\"] = isHoverNearRange,\n            _a[prefixCls + \"-cell-hover-range-start\"] = rangeAvailable && hoverRangeStart && isSameTime(cellDateObj.time, hoverRangeStart),\n            _a[prefixCls + \"-cell-hover-range-end\"] = rangeAvailable && hoverRangeEnd && isSameTime(cellDateObj.time, hoverRangeEnd),\n            _a[prefixCls + \"-cell-hover-in-range\"] = rangeAvailable && isInRange(cellDateObj.time, hoverRangeStart, hoverRangeEnd),\n            _a[prefixCls + \"-cell-disabled\"] = disabled,\n            _a));\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}