{"ast":null,"code":"/**\n * 该组件用来切换tree 展开收起时的动画\n */\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport React, { useMemo, useContext, useEffect } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { TreeContext } from './context';\nimport VirtualList from '../_class/VirtualList';\nimport { ConfigContext } from '../ConfigProvider';\nimport Node from './node';\nimport { isNumber } from '../_util/is';\nfunction getKey(option) {\n  return option.key || option._key;\n}\nvar TreeAnimation = function TreeAnimation(props) {\n  var _a;\n  var treeContext = useContext(TreeContext);\n  var getPrefixCls = useContext(ConfigContext).getPrefixCls;\n  var prefixCls = getPrefixCls('tree-node');\n  var _b = treeContext.getTreeState(),\n    expandedKeys = _b.expandedKeys,\n    currentExpandKeys = _b.currentExpandKeys;\n  var expanded = props.expanded;\n  useEffect(function () {\n    return function () {\n      treeContext.onExpandEnd && treeContext.onExpandEnd(props._key);\n    };\n  }, []);\n  var childrenPropsList = useMemo(function () {\n    var result = [];\n    var loop = function loop(list) {\n      list.forEach(function (item) {\n        var data = treeContext.getFieldInfo(item);\n        result.push(data);\n        if (data.children && data.children.length) {\n          loop(data.children);\n        }\n      });\n    };\n    loop(props.childrenData || []);\n    return result;\n  }, [props.childrenData]);\n  var filtedData = useMemo(function () {\n    var result = [];\n    if (childrenPropsList.length) {\n      var expandedKeysSet_1 = new Set(expandedKeys || []);\n      childrenPropsList.forEach(function (data) {\n        var _a;\n        var isShow;\n        var itemProps = __assign({}, treeContext.key2nodeProps[data.key]);\n        if (expanded) {\n          // 只有在每一个父节点都是展开状态时，自己才会展示出来\n          isShow = itemProps.parentKey === props._key || ((_a = itemProps.pathParentKeys) === null || _a === void 0 ? void 0 : _a.every(function (key) {\n            return expandedKeysSet_1.has(key);\n          }));\n        } else if (itemProps.pathParentKeys) {\n          // 收起时，只有在props._key 对应的位置之后的所有的自己的父节点都是展开状态，才会展示自己\n          var index = itemProps.pathParentKeys.indexOf(props._key);\n          isShow = itemProps.pathParentKeys.slice(index + 1).every(function (key) {\n            return expandedKeysSet_1.has(key);\n          });\n        }\n        if (isShow) {\n          result.push(__assign(__assign(__assign({}, itemProps), treeContext.getNodeProps(itemProps, expandedKeysSet_1)), {\n            key: data.key\n          }));\n        }\n      });\n    }\n    return result;\n  }, [childrenPropsList, props._key, expanded]);\n  var realHeight = (_a = treeContext.virtualListProps) === null || _a === void 0 ? void 0 : _a.height;\n  realHeight = isNumber(realHeight) ? realHeight : 0;\n  useEffect(function () {\n    // node set loadingMore but has no child nodes.\n    // Animation will not be triggered and needs to be removed manually\n    if (currentExpandKeys.indexOf(props._key) > -1 && filtedData.length === 0) {\n      treeContext.onExpandEnd(props._key);\n    }\n  }, [filtedData, currentExpandKeys]);\n  return React.createElement(CSSTransition, {\n    in: currentExpandKeys.indexOf(props._key) > -1 && filtedData.length > 0,\n    unmountOnExit: true,\n    classNames: \"tree-slide-expand\",\n    timeout: {\n      enter: 200,\n      exit: 0\n    },\n    onEnter: function onEnter(e) {\n      var scrollHeight = e.scrollHeight;\n      e.style.height = expanded ? 0 : Math.min(realHeight || scrollHeight, e.scrollHeight) + \"px\";\n    },\n    onEntering: function onEntering(e) {\n      var scrollHeight = e.scrollHeight;\n      e.style.height = expanded ? Math.min(realHeight || scrollHeight, scrollHeight) + \"px\" : 0;\n    },\n    onEntered: function onEntered(e) {\n      e.style.height = props.expanded ? '' : 0;\n      treeContext.onExpandEnd(props._key);\n    },\n    onExit: function onExit(e) {\n      e.style.display = 'none';\n    }\n  }, React.createElement(VirtualList, __assign({\n    itemKey: getKey,\n    className: prefixCls + \"-list\",\n    isStaticItemHeight: false\n  }, treeContext.virtualListProps, {\n    data: filtedData,\n    \"aria-hidden\": true,\n    style: {\n      overflow: 'hidden'\n    }\n  }), function (child) {\n    return React.createElement(Node, __assign({}, child));\n  }));\n};\nexport default TreeAnimation;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","useMemo","useContext","useEffect","CSSTransition","TreeContext","VirtualList","ConfigContext","Node","isNumber","getKey","option","key","_key","TreeAnimation","props","_a","treeContext","getPrefixCls","prefixCls","_b","getTreeState","expandedKeys","currentExpandKeys","expanded","onExpandEnd","childrenPropsList","result","loop","list","forEach","item","data","getFieldInfo","push","children","childrenData","filtedData","expandedKeysSet_1","Set","isShow","itemProps","key2nodeProps","parentKey","pathParentKeys","every","has","index","indexOf","slice","getNodeProps","realHeight","virtualListProps","height","createElement","in","unmountOnExit","classNames","timeout","enter","exit","onEnter","e","scrollHeight","style","Math","min","onEntering","onEntered","onExit","display","itemKey","className","isStaticItemHeight","overflow","child"],"sources":["D:/Code/EchoGPT-frontend/node_modules/@arco-design/web-react/es/Tree/animation.js"],"sourcesContent":["/**\n * 该组件用来切换tree 展开收起时的动画\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React, { useMemo, useContext, useEffect } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { TreeContext } from './context';\nimport VirtualList from '../_class/VirtualList';\nimport { ConfigContext } from '../ConfigProvider';\nimport Node from './node';\nimport { isNumber } from '../_util/is';\nfunction getKey(option) {\n    return option.key || option._key;\n}\nvar TreeAnimation = function (props) {\n    var _a;\n    var treeContext = useContext(TreeContext);\n    var getPrefixCls = useContext(ConfigContext).getPrefixCls;\n    var prefixCls = getPrefixCls('tree-node');\n    var _b = treeContext.getTreeState(), expandedKeys = _b.expandedKeys, currentExpandKeys = _b.currentExpandKeys;\n    var expanded = props.expanded;\n    useEffect(function () {\n        return function () {\n            treeContext.onExpandEnd && treeContext.onExpandEnd(props._key);\n        };\n    }, []);\n    var childrenPropsList = useMemo(function () {\n        var result = [];\n        var loop = function (list) {\n            list.forEach(function (item) {\n                var data = treeContext.getFieldInfo(item);\n                result.push(data);\n                if (data.children && data.children.length) {\n                    loop(data.children);\n                }\n            });\n        };\n        loop(props.childrenData || []);\n        return result;\n    }, [props.childrenData]);\n    var filtedData = useMemo(function () {\n        var result = [];\n        if (childrenPropsList.length) {\n            var expandedKeysSet_1 = new Set(expandedKeys || []);\n            childrenPropsList.forEach(function (data) {\n                var _a;\n                var isShow;\n                var itemProps = __assign({}, treeContext.key2nodeProps[data.key]);\n                if (expanded) {\n                    // 只有在每一个父节点都是展开状态时，自己才会展示出来\n                    isShow =\n                        itemProps.parentKey === props._key ||\n                            ((_a = itemProps.pathParentKeys) === null || _a === void 0 ? void 0 : _a.every(function (key) {\n                                return expandedKeysSet_1.has(key);\n                            }));\n                }\n                else if (itemProps.pathParentKeys) {\n                    // 收起时，只有在props._key 对应的位置之后的所有的自己的父节点都是展开状态，才会展示自己\n                    var index = itemProps.pathParentKeys.indexOf(props._key);\n                    isShow = itemProps.pathParentKeys.slice(index + 1).every(function (key) {\n                        return expandedKeysSet_1.has(key);\n                    });\n                }\n                if (isShow) {\n                    result.push(__assign(__assign(__assign({}, itemProps), treeContext.getNodeProps(itemProps, expandedKeysSet_1)), { key: data.key }));\n                }\n            });\n        }\n        return result;\n    }, [childrenPropsList, props._key, expanded]);\n    var realHeight = (_a = treeContext.virtualListProps) === null || _a === void 0 ? void 0 : _a.height;\n    realHeight = isNumber(realHeight) ? realHeight : 0;\n    useEffect(function () {\n        // node set loadingMore but has no child nodes.\n        // Animation will not be triggered and needs to be removed manually\n        if (currentExpandKeys.indexOf(props._key) > -1 && filtedData.length === 0) {\n            treeContext.onExpandEnd(props._key);\n        }\n    }, [filtedData, currentExpandKeys]);\n    return (React.createElement(CSSTransition, { in: currentExpandKeys.indexOf(props._key) > -1 && filtedData.length > 0, unmountOnExit: true, classNames: \"tree-slide-expand\", timeout: {\n            enter: 200,\n            exit: 0,\n        }, onEnter: function (e) {\n            var scrollHeight = e.scrollHeight;\n            e.style.height = expanded ? 0 : Math.min(realHeight || scrollHeight, e.scrollHeight) + \"px\";\n        }, onEntering: function (e) {\n            var scrollHeight = e.scrollHeight;\n            e.style.height = expanded ? Math.min(realHeight || scrollHeight, scrollHeight) + \"px\" : 0;\n        }, onEntered: function (e) {\n            e.style.height = props.expanded ? '' : 0;\n            treeContext.onExpandEnd(props._key);\n        }, onExit: function (e) {\n            e.style.display = 'none';\n        } },\n        React.createElement(VirtualList, __assign({ itemKey: getKey, className: prefixCls + \"-list\", isStaticItemHeight: false }, treeContext.virtualListProps, { data: filtedData, \"aria-hidden\": true, style: { overflow: 'hidden' } }), function (child) {\n            return React.createElement(Node, __assign({}, child));\n        })));\n};\nexport default TreeAnimation;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}