{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport React, { useContext } from 'react';\nimport cs from '../_util/classNames';\nimport { ConfigContext } from '../ConfigProvider';\nvar Group = React.forwardRef(function (props, ref) {\n  var _a;\n  var getPrefixCls = useContext(ConfigContext).getPrefixCls;\n  var className = props.className,\n    style = props.style,\n    children = props.children,\n    compact = props.compact,\n    rest = __rest(props, [\"className\", \"style\", \"children\", \"compact\"]);\n  var prefixCls = getPrefixCls('input-group');\n  var classNames = cs(prefixCls, (_a = {}, _a[prefixCls + \"-compact\"] = compact, _a), className);\n  return React.createElement(\"div\", __assign({\n    ref: ref,\n    className: classNames,\n    style: style\n  }, rest), children);\n});\nGroup.displayName = 'InputGroup';\nexport default Group;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","React","useContext","cs","ConfigContext","Group","forwardRef","props","ref","_a","getPrefixCls","className","style","children","compact","rest","prefixCls","classNames","createElement","displayName"],"sources":["D:/Code/ceo-copilot-frontend/node_modules/@arco-design/web-react/es/Input/group.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { useContext } from 'react';\nimport cs from '../_util/classNames';\nimport { ConfigContext } from '../ConfigProvider';\nvar Group = React.forwardRef(function (props, ref) {\n    var _a;\n    var getPrefixCls = useContext(ConfigContext).getPrefixCls;\n    var className = props.className, style = props.style, children = props.children, compact = props.compact, rest = __rest(props, [\"className\", \"style\", \"children\", \"compact\"]);\n    var prefixCls = getPrefixCls('input-group');\n    var classNames = cs(prefixCls, (_a = {},\n        _a[prefixCls + \"-compact\"] = compact,\n        _a), className);\n    return (React.createElement(\"div\", __assign({ ref: ref, className: classNames, style: style }, rest), children));\n});\nGroup.displayName = 'InputGroup';\nexport default Group;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}