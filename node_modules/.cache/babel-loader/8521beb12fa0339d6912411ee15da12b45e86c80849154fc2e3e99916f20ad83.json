{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { isArray, isObject, isUndefined, isNull, isNumber, isString } from '../_util/is';\nexport function px2Number(width) {\n  if (isNumber(width)) {\n    return width;\n  }\n  if (isString(width) && width.includes('px')) {\n    return +width.replace('px', '');\n  }\n  return width;\n}\nexport function getScrollBarHeight(ele) {\n  return ele ? ele.offsetHeight - ele.clientHeight : 0;\n}\nexport function getScrollBarWidth(ele) {\n  return ele ? ele.offsetWidth - ele.clientWidth : 0;\n}\nexport function isChildrenNotEmpty(record, field) {\n  return isArray(record[field]) && record[field].length;\n}\nexport function deepCloneData(data, childrenColumnName) {\n  function travel(data) {\n    if (!data) {\n      return [];\n    }\n    var newData = [];\n    data.forEach(function (d) {\n      // case: [[], []]\n      // case: ['', '']\n      // case: [1, 2]\n      if (!isObject(d)) {\n        newData.push(d);\n      } else {\n        var _d = __assign({}, d);\n        _d.__ORIGIN_DATA = d;\n        var children = _d[childrenColumnName];\n        if (isObject(_d) && children && isArray(children)) {\n          _d[childrenColumnName] = travel(children);\n        }\n        newData.push(_d);\n      }\n    });\n    return newData;\n  }\n  return travel(data);\n}\nexport function getOriginData(data) {\n  if (isObject(data)) {\n    return data.__ORIGIN_DATA;\n  }\n  if (!data || !isArray(data)) {\n    return data;\n  }\n  return data.map(function (d) {\n    if (!isObject(d)) {\n      return d;\n    }\n    return d.__ORIGIN_DATA;\n  });\n}\nexport function getSelectedKeys(record, checked, checkedRowKeys, _indeterminateKeys, getRowKey, childrenColumnName, checkConnected) {\n  if (checkedRowKeys === void 0) {\n    checkedRowKeys = [];\n  }\n  if (_indeterminateKeys === void 0) {\n    _indeterminateKeys = [];\n  }\n  var selectedRowKeys = new Set(checkedRowKeys);\n  var indeterminateKeys = new Set(_indeterminateKeys);\n  function loop(record) {\n    if (checked) {\n      selectedRowKeys.add(getRowKey(record));\n      indeterminateKeys.delete(getRowKey(record));\n    } else {\n      selectedRowKeys.delete(getRowKey(record));\n    }\n    if (isArray(record[childrenColumnName])) {\n      record[childrenColumnName].forEach(function (child) {\n        loop(child);\n      });\n    }\n  }\n  if (!checkConnected) {\n    if (checked) {\n      selectedRowKeys.add(getRowKey(record));\n    } else {\n      selectedRowKeys.delete(getRowKey(record));\n    }\n  } else {\n    loop(record);\n    updateParent(record, selectedRowKeys, indeterminateKeys, getRowKey, childrenColumnName);\n  }\n  return {\n    selectedRowKeys: __spreadArray([], __read(selectedRowKeys), false),\n    indeterminateKeys: __spreadArray([], __read(indeterminateKeys), false)\n  };\n}\nexport function getSelectedKeysByData(flattenData, checkedKeys, getRowKey, childrenColumnName, checkConnected) {\n  if (checkedKeys === void 0) {\n    checkedKeys = [];\n  }\n  if (!checkConnected) {\n    return {\n      selectedRowKeys: checkedKeys,\n      indeterminateKeys: []\n    };\n  }\n  var selectedRowKeys = new Set(checkedKeys);\n  var indeterminateKeys = new Set([]);\n  function loop(record) {\n    selectedRowKeys.add(getRowKey(record));\n    indeterminateKeys.delete(getRowKey(record));\n    if (isArray(record[childrenColumnName])) {\n      record[childrenColumnName].forEach(function (child) {\n        loop(child);\n      });\n    }\n  }\n  checkedKeys.forEach(function (key) {\n    var record = flattenData.find(function (d) {\n      return getRowKey(d) === key;\n    });\n    if (!isUndefined(record) && !isNull(record)) {\n      loop(record);\n      updateParent(record, selectedRowKeys, indeterminateKeys, getRowKey, childrenColumnName);\n    }\n  });\n  return {\n    selectedRowKeys: __spreadArray([], __read(selectedRowKeys), false),\n    indeterminateKeys: __spreadArray([], __read(indeterminateKeys), false)\n  };\n}\nfunction updateParent(record, selectedKeys, indeterminateKeys, getRowKey, childrenColumnName) {\n  if (record.__INTERNAL_PARENT) {\n    var parentKey_1 = getRowKey(record.__INTERNAL_PARENT);\n    if (isArray(record.__INTERNAL_PARENT[childrenColumnName])) {\n      var total = record.__INTERNAL_PARENT[childrenColumnName].length;\n      var len_1 = 0;\n      var flag_1 = false;\n      record.__INTERNAL_PARENT[childrenColumnName].forEach(function (c) {\n        if (selectedKeys.has(getRowKey(c))) {\n          len_1 += 1;\n        }\n        if (indeterminateKeys.has(getRowKey(c))) {\n          indeterminateKeys.add(parentKey_1);\n          flag_1 = true;\n        }\n      });\n      if (total === len_1) {\n        selectedKeys.add(parentKey_1);\n        indeterminateKeys.delete(parentKey_1);\n      } else if (len_1 > 0 && total > len_1) {\n        selectedKeys.delete(parentKey_1);\n        indeterminateKeys.add(parentKey_1);\n      } else if (len_1 === 0) {\n        selectedKeys.delete(parentKey_1);\n        if (!flag_1) {\n          indeterminateKeys.delete(parentKey_1);\n        }\n      }\n    }\n    updateParent(record.__INTERNAL_PARENT, selectedKeys, indeterminateKeys, getRowKey, childrenColumnName);\n  }\n}","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__read","o","m","Symbol","iterator","r","ar","e","next","done","push","value","error","__spreadArray","to","from","pack","l","Array","slice","concat","isArray","isObject","isUndefined","isNull","isNumber","isString","px2Number","width","includes","replace","getScrollBarHeight","ele","offsetHeight","clientHeight","getScrollBarWidth","offsetWidth","clientWidth","isChildrenNotEmpty","record","field","deepCloneData","data","childrenColumnName","travel","newData","forEach","d","_d","__ORIGIN_DATA","children","getOriginData","map","getSelectedKeys","checked","checkedRowKeys","_indeterminateKeys","getRowKey","checkConnected","selectedRowKeys","Set","indeterminateKeys","loop","add","delete","child","updateParent","getSelectedKeysByData","flattenData","checkedKeys","key","find","selectedKeys","__INTERNAL_PARENT","parentKey_1","total","len_1","flag_1","c","has"],"sources":["D:/Code/LegalGPT-frontend/node_modules/@arco-design/web-react/es/Table/utils.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { isArray, isObject, isUndefined, isNull, isNumber, isString } from '../_util/is';\nexport function px2Number(width) {\n    if (isNumber(width)) {\n        return width;\n    }\n    if (isString(width) && width.includes('px')) {\n        return +width.replace('px', '');\n    }\n    return width;\n}\nexport function getScrollBarHeight(ele) {\n    return ele ? ele.offsetHeight - ele.clientHeight : 0;\n}\nexport function getScrollBarWidth(ele) {\n    return ele ? ele.offsetWidth - ele.clientWidth : 0;\n}\nexport function isChildrenNotEmpty(record, field) {\n    return isArray(record[field]) && record[field].length;\n}\nexport function deepCloneData(data, childrenColumnName) {\n    function travel(data) {\n        if (!data) {\n            return [];\n        }\n        var newData = [];\n        data.forEach(function (d) {\n            // case: [[], []]\n            // case: ['', '']\n            // case: [1, 2]\n            if (!isObject(d)) {\n                newData.push(d);\n            }\n            else {\n                var _d = __assign({}, d);\n                _d.__ORIGIN_DATA = d;\n                var children = _d[childrenColumnName];\n                if (isObject(_d) && children && isArray(children)) {\n                    _d[childrenColumnName] = travel(children);\n                }\n                newData.push(_d);\n            }\n        });\n        return newData;\n    }\n    return travel(data);\n}\nexport function getOriginData(data) {\n    if (isObject(data)) {\n        return data.__ORIGIN_DATA;\n    }\n    if (!data || !isArray(data)) {\n        return data;\n    }\n    return data.map(function (d) {\n        if (!isObject(d)) {\n            return d;\n        }\n        return d.__ORIGIN_DATA;\n    });\n}\nexport function getSelectedKeys(record, checked, checkedRowKeys, _indeterminateKeys, getRowKey, childrenColumnName, checkConnected) {\n    if (checkedRowKeys === void 0) { checkedRowKeys = []; }\n    if (_indeterminateKeys === void 0) { _indeterminateKeys = []; }\n    var selectedRowKeys = new Set(checkedRowKeys);\n    var indeterminateKeys = new Set(_indeterminateKeys);\n    function loop(record) {\n        if (checked) {\n            selectedRowKeys.add(getRowKey(record));\n            indeterminateKeys.delete(getRowKey(record));\n        }\n        else {\n            selectedRowKeys.delete(getRowKey(record));\n        }\n        if (isArray(record[childrenColumnName])) {\n            record[childrenColumnName].forEach(function (child) {\n                loop(child);\n            });\n        }\n    }\n    if (!checkConnected) {\n        if (checked) {\n            selectedRowKeys.add(getRowKey(record));\n        }\n        else {\n            selectedRowKeys.delete(getRowKey(record));\n        }\n    }\n    else {\n        loop(record);\n        updateParent(record, selectedRowKeys, indeterminateKeys, getRowKey, childrenColumnName);\n    }\n    return {\n        selectedRowKeys: __spreadArray([], __read(selectedRowKeys), false),\n        indeterminateKeys: __spreadArray([], __read(indeterminateKeys), false),\n    };\n}\nexport function getSelectedKeysByData(flattenData, checkedKeys, getRowKey, childrenColumnName, checkConnected) {\n    if (checkedKeys === void 0) { checkedKeys = []; }\n    if (!checkConnected) {\n        return {\n            selectedRowKeys: checkedKeys,\n            indeterminateKeys: [],\n        };\n    }\n    var selectedRowKeys = new Set(checkedKeys);\n    var indeterminateKeys = new Set([]);\n    function loop(record) {\n        selectedRowKeys.add(getRowKey(record));\n        indeterminateKeys.delete(getRowKey(record));\n        if (isArray(record[childrenColumnName])) {\n            record[childrenColumnName].forEach(function (child) {\n                loop(child);\n            });\n        }\n    }\n    checkedKeys.forEach(function (key) {\n        var record = flattenData.find(function (d) { return getRowKey(d) === key; });\n        if (!isUndefined(record) && !isNull(record)) {\n            loop(record);\n            updateParent(record, selectedRowKeys, indeterminateKeys, getRowKey, childrenColumnName);\n        }\n    });\n    return {\n        selectedRowKeys: __spreadArray([], __read(selectedRowKeys), false),\n        indeterminateKeys: __spreadArray([], __read(indeterminateKeys), false),\n    };\n}\nfunction updateParent(record, selectedKeys, indeterminateKeys, getRowKey, childrenColumnName) {\n    if (record.__INTERNAL_PARENT) {\n        var parentKey_1 = getRowKey(record.__INTERNAL_PARENT);\n        if (isArray(record.__INTERNAL_PARENT[childrenColumnName])) {\n            var total = record.__INTERNAL_PARENT[childrenColumnName].length;\n            var len_1 = 0;\n            var flag_1 = false;\n            record.__INTERNAL_PARENT[childrenColumnName].forEach(function (c) {\n                if (selectedKeys.has(getRowKey(c))) {\n                    len_1 += 1;\n                }\n                if (indeterminateKeys.has(getRowKey(c))) {\n                    indeterminateKeys.add(parentKey_1);\n                    flag_1 = true;\n                }\n            });\n            if (total === len_1) {\n                selectedKeys.add(parentKey_1);\n                indeterminateKeys.delete(parentKey_1);\n            }\n            else if (len_1 > 0 && total > len_1) {\n                selectedKeys.delete(parentKey_1);\n                indeterminateKeys.add(parentKey_1);\n            }\n            else if (len_1 === 0) {\n                selectedKeys.delete(parentKey_1);\n                if (!flag_1) {\n                    indeterminateKeys.delete(parentKey_1);\n                }\n            }\n        }\n        updateParent(record.__INTERNAL_PARENT, selectedKeys, indeterminateKeys, getRowKey, childrenColumnName);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}