{"ast":null,"code":"import { useMemo } from 'react';\nimport cs from '../../_util/classNames';\nimport { isObject } from '../../_util/is';\n// get sticky cell's className\nfunction useStickyClassNames(groupColumns, columns, prefixCls) {\n  var colFixed = columns.map(function (c) {\n    return c.fixed;\n  });\n  function getClassNameFromColumn(column, index) {\n    var _a;\n    return cs((_a = {}, _a[prefixCls + \"-col-fixed-left\"] = column.fixed === 'left', _a[prefixCls + \"-col-fixed-right\"] = column.fixed === 'right', _a[prefixCls + \"-col-fixed-left-last\"] = column.fixed === 'left' && (isObject(columns[index + 1]) ? columns[index + 1].fixed !== 'left' : true), _a[prefixCls + \"-col-fixed-right-first\"] = column.fixed === 'right' && (isObject(columns[index - 1]) ? columns[index - 1].fixed !== 'right' : true), _a));\n  }\n  var stickyClassNames = useMemo(function () {\n    return columns.map(function (column, index) {\n      return getClassNameFromColumn(column, index);\n    });\n  }, [colFixed.join('-')]);\n  var groupStickyClassNames = useMemo(function () {\n    return groupColumns.map(function (gc) {\n      return gc.map(function (column, i) {\n        var index = i;\n        var columnIndex = column.$$columnIndex;\n        if (Array.isArray(columnIndex) && columnIndex.length === 2) {\n          index = column.fixed === 'right' ? columnIndex[0] : columnIndex[1];\n        } else if (typeof columnIndex === 'number') {\n          index = columnIndex;\n        }\n        return getClassNameFromColumn(column, index);\n      });\n    });\n  }, [groupColumns.map(function (c) {\n    return \"|\" + c.map(function (a) {\n      return a.fixed || 'undefined';\n    }).join('-') + \"|\";\n  }).join('_')]);\n  return [groupStickyClassNames, stickyClassNames];\n}\nexport default useStickyClassNames;","map":{"version":3,"names":["useMemo","cs","isObject","useStickyClassNames","groupColumns","columns","prefixCls","colFixed","map","c","fixed","getClassNameFromColumn","column","index","_a","stickyClassNames","join","groupStickyClassNames","gc","i","columnIndex","$$columnIndex","Array","isArray","length","a"],"sources":["D:/Code/EchoGPT-frontend/node_modules/@arco-design/web-react/es/Table/hooks/useStickyClassNames.js"],"sourcesContent":["import { useMemo } from 'react';\nimport cs from '../../_util/classNames';\nimport { isObject } from '../../_util/is';\n// get sticky cell's className\nfunction useStickyClassNames(groupColumns, columns, prefixCls) {\n    var colFixed = columns.map(function (c) { return c.fixed; });\n    function getClassNameFromColumn(column, index) {\n        var _a;\n        return cs((_a = {},\n            _a[prefixCls + \"-col-fixed-left\"] = column.fixed === 'left',\n            _a[prefixCls + \"-col-fixed-right\"] = column.fixed === 'right',\n            _a[prefixCls + \"-col-fixed-left-last\"] = column.fixed === 'left' &&\n                (isObject(columns[index + 1]) ? columns[index + 1].fixed !== 'left' : true),\n            _a[prefixCls + \"-col-fixed-right-first\"] = column.fixed === 'right' &&\n                (isObject(columns[index - 1]) ? columns[index - 1].fixed !== 'right' : true),\n            _a));\n    }\n    var stickyClassNames = useMemo(function () {\n        return columns.map(function (column, index) { return getClassNameFromColumn(column, index); });\n    }, [colFixed.join('-')]);\n    var groupStickyClassNames = useMemo(function () {\n        return groupColumns.map(function (gc) {\n            return gc.map(function (column, i) {\n                var index = i;\n                var columnIndex = column.$$columnIndex;\n                if (Array.isArray(columnIndex) && columnIndex.length === 2) {\n                    index = column.fixed === 'right' ? columnIndex[0] : columnIndex[1];\n                }\n                else if (typeof columnIndex === 'number') {\n                    index = columnIndex;\n                }\n                return getClassNameFromColumn(column, index);\n            });\n        });\n    }, [groupColumns.map(function (c) { return \"|\" + c.map(function (a) { return a.fixed || 'undefined'; }).join('-') + \"|\"; }).join('_')]);\n    return [groupStickyClassNames, stickyClassNames];\n}\nexport default useStickyClassNames;\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,OAAO;AAC/B,OAAOC,EAAE,MAAM,wBAAwB;AACvC,SAASC,QAAQ,QAAQ,gBAAgB;AACzC;AACA,SAASC,mBAAmBA,CAACC,YAAY,EAAEC,OAAO,EAAEC,SAAS,EAAE;EAC3D,IAAIC,QAAQ,GAAGF,OAAO,CAACG,GAAG,CAAC,UAAUC,CAAC,EAAE;IAAE,OAAOA,CAAC,CAACC,KAAK;EAAE,CAAC,CAAC;EAC5D,SAASC,sBAAsBA,CAACC,MAAM,EAAEC,KAAK,EAAE;IAC3C,IAAIC,EAAE;IACN,OAAOb,EAAE,EAAEa,EAAE,GAAG,CAAC,CAAC,EACdA,EAAE,CAACR,SAAS,GAAG,iBAAiB,CAAC,GAAGM,MAAM,CAACF,KAAK,KAAK,MAAM,EAC3DI,EAAE,CAACR,SAAS,GAAG,kBAAkB,CAAC,GAAGM,MAAM,CAACF,KAAK,KAAK,OAAO,EAC7DI,EAAE,CAACR,SAAS,GAAG,sBAAsB,CAAC,GAAGM,MAAM,CAACF,KAAK,KAAK,MAAM,KAC3DR,QAAQ,CAACG,OAAO,CAACQ,KAAK,GAAG,CAAC,CAAC,CAAC,GAAGR,OAAO,CAACQ,KAAK,GAAG,CAAC,CAAC,CAACH,KAAK,KAAK,MAAM,GAAG,IAAI,CAAC,EAC/EI,EAAE,CAACR,SAAS,GAAG,wBAAwB,CAAC,GAAGM,MAAM,CAACF,KAAK,KAAK,OAAO,KAC9DR,QAAQ,CAACG,OAAO,CAACQ,KAAK,GAAG,CAAC,CAAC,CAAC,GAAGR,OAAO,CAACQ,KAAK,GAAG,CAAC,CAAC,CAACH,KAAK,KAAK,OAAO,GAAG,IAAI,CAAC,EAChFI,EAAE,EAAE;EACZ;EACA,IAAIC,gBAAgB,GAAGf,OAAO,CAAC,YAAY;IACvC,OAAOK,OAAO,CAACG,GAAG,CAAC,UAAUI,MAAM,EAAEC,KAAK,EAAE;MAAE,OAAOF,sBAAsB,CAACC,MAAM,EAAEC,KAAK,CAAC;IAAE,CAAC,CAAC;EAClG,CAAC,EAAE,CAACN,QAAQ,CAACS,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;EACxB,IAAIC,qBAAqB,GAAGjB,OAAO,CAAC,YAAY;IAC5C,OAAOI,YAAY,CAACI,GAAG,CAAC,UAAUU,EAAE,EAAE;MAClC,OAAOA,EAAE,CAACV,GAAG,CAAC,UAAUI,MAAM,EAAEO,CAAC,EAAE;QAC/B,IAAIN,KAAK,GAAGM,CAAC;QACb,IAAIC,WAAW,GAAGR,MAAM,CAACS,aAAa;QACtC,IAAIC,KAAK,CAACC,OAAO,CAACH,WAAW,CAAC,IAAIA,WAAW,CAACI,MAAM,KAAK,CAAC,EAAE;UACxDX,KAAK,GAAGD,MAAM,CAACF,KAAK,KAAK,OAAO,GAAGU,WAAW,CAAC,CAAC,CAAC,GAAGA,WAAW,CAAC,CAAC,CAAC;QACtE,CAAC,MACI,IAAI,OAAOA,WAAW,KAAK,QAAQ,EAAE;UACtCP,KAAK,GAAGO,WAAW;QACvB;QACA,OAAOT,sBAAsB,CAACC,MAAM,EAAEC,KAAK,CAAC;MAChD,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC,EAAE,CAACT,YAAY,CAACI,GAAG,CAAC,UAAUC,CAAC,EAAE;IAAE,OAAO,GAAG,GAAGA,CAAC,CAACD,GAAG,CAAC,UAAUiB,CAAC,EAAE;MAAE,OAAOA,CAAC,CAACf,KAAK,IAAI,WAAW;IAAE,CAAC,CAAC,CAACM,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG;EAAE,CAAC,CAAC,CAACA,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;EACvI,OAAO,CAACC,qBAAqB,EAAEF,gBAAgB,CAAC;AACpD;AACA,eAAeZ,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}