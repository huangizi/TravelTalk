{"ast":null,"code":"var __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nimport { useState } from 'react';\nimport { isChildrenNotEmpty, getOriginData } from '../utils';\nexport default function useExpand(props, flattenData, getRowKey) {\n  var defaultExpandedRowKeys = props.defaultExpandedRowKeys,\n    defaultExpandAllRows = props.defaultExpandAllRows,\n    expandedRowRender = props.expandedRowRender,\n    onExpand = props.onExpand,\n    onExpandedRowsChange = props.onExpandedRowsChange,\n    _a = props.childrenColumnName,\n    childrenColumnName = _a === void 0 ? 'children' : _a,\n    expandProps = props.expandProps;\n  var _b = __read(useState(getDefaultExpandedRowKeys()), 2),\n    expandedRowKeys = _b[0],\n    setExpandedRowKeys = _b[1];\n  var mergedExpandedRowKeys = props.expandedRowKeys || expandedRowKeys;\n  function getDefaultExpandedRowKeys() {\n    var rows = [];\n    if (props.expandedRowKeys) {\n      rows = props.expandedRowKeys;\n    } else if (defaultExpandedRowKeys) {\n      rows = defaultExpandedRowKeys;\n    } else if (defaultExpandAllRows) {\n      rows = flattenData.map(function (item, index) {\n        var originItem = getOriginData(item);\n        if (expandProps && 'rowExpandable' in expandProps && typeof expandProps.rowExpandable === 'function') {\n          return expandProps.rowExpandable(originItem);\n        }\n        if (typeof expandedRowRender === 'function') {\n          return expandedRowRender(originItem, index) && getRowKey(item);\n        }\n        return isChildrenNotEmpty(item, childrenColumnName) && getRowKey(item);\n      }).filter(function (x) {\n        return x;\n      });\n    }\n    return rows;\n  }\n  function onClickExpandBtn(key) {\n    var isExpanded = mergedExpandedRowKeys.indexOf(key) === -1;\n    var newExpandedRowKeys = isExpanded ? mergedExpandedRowKeys.concat(key) : mergedExpandedRowKeys.filter(function (_k) {\n      return key !== _k;\n    });\n    var sortedExpandedRowKeys = flattenData.filter(function (record) {\n      return newExpandedRowKeys.indexOf(getRowKey(record)) !== -1;\n    }).map(function (record) {\n      return getRowKey(record);\n    });\n    setExpandedRowKeys(sortedExpandedRowKeys);\n    handleExpandChange(key, isExpanded);\n    onExpandedRowsChange && onExpandedRowsChange(sortedExpandedRowKeys);\n  }\n  function handleExpandChange(key, expanded) {\n    onExpand && onExpand(getOriginData(flattenData.find(function (item) {\n      return getRowKey(item) === key;\n    })), expanded);\n  }\n  return [mergedExpandedRowKeys, onClickExpandBtn];\n}","map":{"version":3,"names":["__read","o","n","m","Symbol","iterator","i","call","r","ar","e","next","done","push","value","error","useState","isChildrenNotEmpty","getOriginData","useExpand","props","flattenData","getRowKey","defaultExpandedRowKeys","defaultExpandAllRows","expandedRowRender","onExpand","onExpandedRowsChange","_a","childrenColumnName","expandProps","_b","getDefaultExpandedRowKeys","expandedRowKeys","setExpandedRowKeys","mergedExpandedRowKeys","rows","map","item","index","originItem","rowExpandable","filter","x","onClickExpandBtn","key","isExpanded","indexOf","newExpandedRowKeys","concat","_k","sortedExpandedRowKeys","record","handleExpandChange","expanded","find"],"sources":["D:/Code/ceo-copilot-frontend/node_modules/@arco-design/web-react/es/Table/hooks/useExpand.js"],"sourcesContent":["var __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport { useState } from 'react';\nimport { isChildrenNotEmpty, getOriginData } from '../utils';\nexport default function useExpand(props, flattenData, getRowKey) {\n    var defaultExpandedRowKeys = props.defaultExpandedRowKeys, defaultExpandAllRows = props.defaultExpandAllRows, expandedRowRender = props.expandedRowRender, onExpand = props.onExpand, onExpandedRowsChange = props.onExpandedRowsChange, _a = props.childrenColumnName, childrenColumnName = _a === void 0 ? 'children' : _a, expandProps = props.expandProps;\n    var _b = __read(useState(getDefaultExpandedRowKeys()), 2), expandedRowKeys = _b[0], setExpandedRowKeys = _b[1];\n    var mergedExpandedRowKeys = props.expandedRowKeys || expandedRowKeys;\n    function getDefaultExpandedRowKeys() {\n        var rows = [];\n        if (props.expandedRowKeys) {\n            rows = props.expandedRowKeys;\n        }\n        else if (defaultExpandedRowKeys) {\n            rows = defaultExpandedRowKeys;\n        }\n        else if (defaultExpandAllRows) {\n            rows = flattenData\n                .map(function (item, index) {\n                var originItem = getOriginData(item);\n                if (expandProps &&\n                    'rowExpandable' in expandProps &&\n                    typeof expandProps.rowExpandable === 'function') {\n                    return expandProps.rowExpandable(originItem);\n                }\n                if (typeof expandedRowRender === 'function') {\n                    return expandedRowRender(originItem, index) && getRowKey(item);\n                }\n                return isChildrenNotEmpty(item, childrenColumnName) && getRowKey(item);\n            })\n                .filter(function (x) { return x; });\n        }\n        return rows;\n    }\n    function onClickExpandBtn(key) {\n        var isExpanded = mergedExpandedRowKeys.indexOf(key) === -1;\n        var newExpandedRowKeys = isExpanded\n            ? mergedExpandedRowKeys.concat(key)\n            : mergedExpandedRowKeys.filter(function (_k) { return key !== _k; });\n        var sortedExpandedRowKeys = flattenData\n            .filter(function (record) { return newExpandedRowKeys.indexOf(getRowKey(record)) !== -1; })\n            .map(function (record) { return getRowKey(record); });\n        setExpandedRowKeys(sortedExpandedRowKeys);\n        handleExpandChange(key, isExpanded);\n        onExpandedRowsChange && onExpandedRowsChange(sortedExpandedRowKeys);\n    }\n    function handleExpandChange(key, expanded) {\n        onExpand &&\n            onExpand(getOriginData(flattenData.find(function (item) { return getRowKey(item) === key; })), expanded);\n    }\n    return [mergedExpandedRowKeys, onClickExpandBtn];\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}