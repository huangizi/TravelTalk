{"ast":null,"code":"var __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nimport { useState, useEffect } from 'react';\nvar globalInstanceIdMap = {};\n/**\n * Provide unique component name while using this hook\n * In react 18, React.useId is a better way to choose\n * Related issue: https://github.com/arco-design/arco-design/issues/958\n */\nexport default function useId(prefix) {\n  var _a = __read(useState(), 2),\n    id = _a[0],\n    setId = _a[1];\n  // Update ID in next render to avoid SSR [prop dit not match] error\n  useEffect(function () {\n    globalInstanceIdMap[prefix] = prefix in globalInstanceIdMap ? globalInstanceIdMap[prefix] : 0;\n    setId(globalInstanceIdMap[prefix]);\n    globalInstanceIdMap[prefix] += 1;\n  }, []);\n  return typeof id === 'number' ? \"\" + prefix + id : undefined;\n}","map":{"version":3,"names":["__read","o","n","m","Symbol","iterator","i","call","r","ar","e","next","done","push","value","error","useState","useEffect","globalInstanceIdMap","useId","prefix","_a","id","setId","undefined"],"sources":["D:/Code/LegalGPT-frontend/node_modules/@arco-design/web-react/es/_util/hooks/useId.js"],"sourcesContent":["var __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport { useState, useEffect } from 'react';\nvar globalInstanceIdMap = {};\n/**\n * Provide unique component name while using this hook\n * In react 18, React.useId is a better way to choose\n * Related issue: https://github.com/arco-design/arco-design/issues/958\n */\nexport default function useId(prefix) {\n    var _a = __read(useState(), 2), id = _a[0], setId = _a[1];\n    // Update ID in next render to avoid SSR [prop dit not match] error\n    useEffect(function () {\n        globalInstanceIdMap[prefix] = prefix in globalInstanceIdMap ? globalInstanceIdMap[prefix] : 0;\n        setId(globalInstanceIdMap[prefix]);\n        globalInstanceIdMap[prefix] += 1;\n    }, []);\n    return typeof id === 'number' ? \"\" + prefix + id : undefined;\n}\n"],"mappings":"AAAA,IAAIA,MAAM,GAAI,IAAI,IAAI,IAAI,CAACA,MAAM,IAAK,UAAUC,CAAC,EAAEC,CAAC,EAAE;EAClD,IAAIC,CAAC,GAAG,OAAOC,MAAM,KAAK,UAAU,IAAIH,CAAC,CAACG,MAAM,CAACC,QAAQ,CAAC;EAC1D,IAAI,CAACF,CAAC,EAAE,OAAOF,CAAC;EAChB,IAAIK,CAAC,GAAGH,CAAC,CAACI,IAAI,CAACN,CAAC,CAAC;IAAEO,CAAC;IAAEC,EAAE,GAAG,EAAE;IAAEC,CAAC;EAChC,IAAI;IACA,OAAO,CAACR,CAAC,KAAK,KAAK,CAAC,IAAIA,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAACM,CAAC,GAAGF,CAAC,CAACK,IAAI,EAAE,EAAEC,IAAI,EAAEH,EAAE,CAACI,IAAI,CAACL,CAAC,CAACM,KAAK,CAAC;EAC9E,CAAC,CACD,OAAOC,KAAK,EAAE;IAAEL,CAAC,GAAG;MAAEK,KAAK,EAAEA;IAAM,CAAC;EAAE,CAAC,SAC/B;IACJ,IAAI;MACA,IAAIP,CAAC,IAAI,CAACA,CAAC,CAACI,IAAI,KAAKT,CAAC,GAAGG,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAEH,CAAC,CAACI,IAAI,CAACD,CAAC,CAAC;IACpD,CAAC,SACO;MAAE,IAAII,CAAC,EAAE,MAAMA,CAAC,CAACK,KAAK;IAAE;EACpC;EACA,OAAON,EAAE;AACb,CAAC;AACD,SAASO,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,IAAIC,mBAAmB,GAAG,CAAC,CAAC;AAC5B;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,KAAKA,CAACC,MAAM,EAAE;EAClC,IAAIC,EAAE,GAAGrB,MAAM,CAACgB,QAAQ,EAAE,EAAE,CAAC,CAAC;IAAEM,EAAE,GAAGD,EAAE,CAAC,CAAC,CAAC;IAAEE,KAAK,GAAGF,EAAE,CAAC,CAAC,CAAC;EACzD;EACAJ,SAAS,CAAC,YAAY;IAClBC,mBAAmB,CAACE,MAAM,CAAC,GAAGA,MAAM,IAAIF,mBAAmB,GAAGA,mBAAmB,CAACE,MAAM,CAAC,GAAG,CAAC;IAC7FG,KAAK,CAACL,mBAAmB,CAACE,MAAM,CAAC,CAAC;IAClCF,mBAAmB,CAACE,MAAM,CAAC,IAAI,CAAC;EACpC,CAAC,EAAE,EAAE,CAAC;EACN,OAAO,OAAOE,EAAE,KAAK,QAAQ,GAAG,EAAE,GAAGF,MAAM,GAAGE,EAAE,GAAGE,SAAS;AAChE"},"metadata":{},"sourceType":"module","externalDependencies":[]}