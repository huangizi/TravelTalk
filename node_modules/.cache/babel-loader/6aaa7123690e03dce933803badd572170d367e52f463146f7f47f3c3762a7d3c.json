{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nimport React, { useState, useRef, useEffect } from 'react';\nimport useKeyboardEvent from '../_util/hooks/useKeyboardEvent';\nimport Tooltip from '../Tooltip';\nimport { isObject, isArray } from '../_util/is';\nimport copy from '../_util/clipboard';\nimport IconCopy from '../../icon/react-icon/IconCopy';\nimport IconCheckCircleFill from '../../icon/react-icon/IconCheckCircleFill';\nimport IconEdit from '../../icon/react-icon/IconEdit';\nimport mergedToString from '../_util/mergedToString';\nexport default function Operations(props) {\n  var children = props.children,\n    copyable = props.copyable,\n    editable = props.editable,\n    ellipsis = props.ellipsis,\n    expanding = props.expanding,\n    setEditing = props.setEditing,\n    onClickExpand = props.onClickExpand,\n    forceShowExpand = props.forceShowExpand,\n    isEllipsis = props.isEllipsis,\n    _a = props.currentContext,\n    currentContext = _a === void 0 ? {} : _a;\n  var getEventListeners = useKeyboardEvent();\n  var getPrefixCls = currentContext.getPrefixCls,\n    locale = currentContext.locale;\n  var prefixCls = getPrefixCls('typography');\n  var _b = __read(useState(false), 2),\n    isCopied = _b[0],\n    setCopied = _b[1];\n  var copyTimer = useRef(null);\n  var copyConfig = isObject(copyable) ? copyable : {};\n  var ellipsisConfig = isObject(ellipsis) ? ellipsis : {};\n  var editableConfig = isObject(editable) ? editable : {};\n  var expandNodes = isArray(ellipsisConfig.expandNodes) ? ellipsisConfig.expandNodes : [locale.Typography.fold, locale.Typography.unfold];\n  useEffect(function () {\n    return function () {\n      clearTimeout(copyTimer.current);\n      copyTimer.current = null;\n    };\n  }, []);\n  function onClickCopy(e) {\n    if (isCopied) return;\n    var text = copyConfig.text !== undefined ? copyConfig.text : mergedToString(children);\n    copy(text);\n    setCopied(true);\n    copyConfig.onCopy && copyConfig.onCopy(text, e);\n    copyTimer.current = setTimeout(function () {\n      setCopied(false);\n    }, 3000);\n  }\n  var onClickEdit = function onClickEdit(e) {\n    editableConfig.onStart && editableConfig.onStart(mergedToString(children), e);\n    setEditing(true);\n  };\n  var tooltips = copyConfig.tooltips || [locale.Typography.copy, locale.Typography.copied];\n  var copyElement = copyable && React.createElement(Tooltip, {\n    content: isCopied ? tooltips[1] : tooltips[0]\n  }, React.createElement(\"span\", __assign({\n    className: isCopied ? prefixCls + \"-operation-copied\" : prefixCls + \"-operation-copy\",\n    onClick: onClickCopy,\n    role: \"button\",\n    \"aria-label\": tooltips[0],\n    tabIndex: 0\n  }, getEventListeners({\n    onPressEnter: onClickCopy\n  })), isCopied ? React.createElement(IconCheckCircleFill, null) : copyConfig.icon || React.createElement(IconCopy, null)));\n  var editElement = editable && React.createElement(Tooltip, {\n    content: locale.Typography.edit\n  }, React.createElement(\"span\", __assign({\n    tabIndex: 0,\n    \"aria-label\": locale.Typography.edit,\n    role: \"button\",\n    className: prefixCls + \"-operation-edit\",\n    onClick: onClickEdit\n  }, getEventListeners({\n    onPressEnter: onClickEdit\n  })), React.createElement(IconEdit, null)));\n  var ellipsisElement = forceShowExpand || ellipsisConfig.expandable && isEllipsis ? React.createElement(\"a\", __assign({\n    className: prefixCls + \"-operation-expand\",\n    onClick: onClickExpand,\n    role: \"button\",\n    tabIndex: 0,\n    \"aria-label\": locale.Typography.unfold\n  }, getEventListeners({\n    onPressEnter: onClickExpand\n  })), expanding ? expandNodes[0] : expandNodes[1]) : null;\n  return React.createElement(React.Fragment, null, ellipsisElement, editElement, copyElement);\n}","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__read","o","m","Symbol","iterator","r","ar","e","next","done","push","value","error","React","useState","useRef","useEffect","useKeyboardEvent","Tooltip","isObject","isArray","copy","IconCopy","IconCheckCircleFill","IconEdit","mergedToString","Operations","props","children","copyable","editable","ellipsis","expanding","setEditing","onClickExpand","forceShowExpand","isEllipsis","_a","currentContext","getEventListeners","getPrefixCls","locale","prefixCls","_b","isCopied","setCopied","copyTimer","copyConfig","ellipsisConfig","editableConfig","expandNodes","Typography","fold","unfold","clearTimeout","current","onClickCopy","text","undefined","onCopy","setTimeout","onClickEdit","onStart","tooltips","copied","copyElement","createElement","content","className","onClick","role","tabIndex","onPressEnter","icon","editElement","edit","ellipsisElement","expandable","Fragment"],"sources":["D:/Code/EchoGPT-frontend/node_modules/@arco-design/web-react/es/Typography/operations.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport React, { useState, useRef, useEffect } from 'react';\nimport useKeyboardEvent from '../_util/hooks/useKeyboardEvent';\nimport Tooltip from '../Tooltip';\nimport { isObject, isArray } from '../_util/is';\nimport copy from '../_util/clipboard';\nimport IconCopy from '../../icon/react-icon/IconCopy';\nimport IconCheckCircleFill from '../../icon/react-icon/IconCheckCircleFill';\nimport IconEdit from '../../icon/react-icon/IconEdit';\nimport mergedToString from '../_util/mergedToString';\nexport default function Operations(props) {\n    var children = props.children, copyable = props.copyable, editable = props.editable, ellipsis = props.ellipsis, expanding = props.expanding, setEditing = props.setEditing, onClickExpand = props.onClickExpand, forceShowExpand = props.forceShowExpand, isEllipsis = props.isEllipsis, _a = props.currentContext, currentContext = _a === void 0 ? {} : _a;\n    var getEventListeners = useKeyboardEvent();\n    var getPrefixCls = currentContext.getPrefixCls, locale = currentContext.locale;\n    var prefixCls = getPrefixCls('typography');\n    var _b = __read(useState(false), 2), isCopied = _b[0], setCopied = _b[1];\n    var copyTimer = useRef(null);\n    var copyConfig = isObject(copyable) ? copyable : {};\n    var ellipsisConfig = isObject(ellipsis) ? ellipsis : {};\n    var editableConfig = isObject(editable) ? editable : {};\n    var expandNodes = isArray(ellipsisConfig.expandNodes)\n        ? ellipsisConfig.expandNodes\n        : [locale.Typography.fold, locale.Typography.unfold];\n    useEffect(function () {\n        return function () {\n            clearTimeout(copyTimer.current);\n            copyTimer.current = null;\n        };\n    }, []);\n    function onClickCopy(e) {\n        if (isCopied)\n            return;\n        var text = copyConfig.text !== undefined ? copyConfig.text : mergedToString(children);\n        copy(text);\n        setCopied(true);\n        copyConfig.onCopy && copyConfig.onCopy(text, e);\n        copyTimer.current = setTimeout(function () {\n            setCopied(false);\n        }, 3000);\n    }\n    var onClickEdit = function (e) {\n        editableConfig.onStart && editableConfig.onStart(mergedToString(children), e);\n        setEditing(true);\n    };\n    var tooltips = copyConfig.tooltips || [locale.Typography.copy, locale.Typography.copied];\n    var copyElement = copyable && (React.createElement(Tooltip, { content: isCopied ? tooltips[1] : tooltips[0] },\n        React.createElement(\"span\", __assign({ className: isCopied ? prefixCls + \"-operation-copied\" : prefixCls + \"-operation-copy\", onClick: onClickCopy, role: \"button\", \"aria-label\": tooltips[0], tabIndex: 0 }, getEventListeners({\n            onPressEnter: onClickCopy,\n        })), isCopied ? React.createElement(IconCheckCircleFill, null) : copyConfig.icon || React.createElement(IconCopy, null))));\n    var editElement = editable && (React.createElement(Tooltip, { content: locale.Typography.edit },\n        React.createElement(\"span\", __assign({ tabIndex: 0, \"aria-label\": locale.Typography.edit, role: \"button\", className: prefixCls + \"-operation-edit\", onClick: onClickEdit }, getEventListeners({\n            onPressEnter: onClickEdit,\n        })),\n            React.createElement(IconEdit, null))));\n    var ellipsisElement = forceShowExpand || (ellipsisConfig.expandable && isEllipsis) ? (React.createElement(\"a\", __assign({ className: prefixCls + \"-operation-expand\", onClick: onClickExpand, role: \"button\", tabIndex: 0, \"aria-label\": locale.Typography.unfold }, getEventListeners({\n        onPressEnter: onClickExpand,\n    })), expanding ? expandNodes[0] : expandNodes[1])) : null;\n    return (React.createElement(React.Fragment, null,\n        ellipsisElement,\n        editElement,\n        copyElement));\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}