{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport scrollIntoView from 'scroll-into-view-if-needed';\nimport { isFunction } from './is';\nexport default function (node, options) {\n  if (node) {\n    scrollIntoView(node, __assign({\n      block: 'start',\n      behavior: 'instant',\n      scrollMode: 'if-needed'\n    }, options));\n    var height = node.offsetHeight;\n    var scaleHeight = node.getBoundingClientRect().height;\n    // trigger 带有scale动画，在 scrollIntoView 的时候，动画未执行完全，此时通过 getBoundingClientRect 获取到的 height 是 scale 后的高度。\n    // 所以需要额外滚动一点距离。\n    if (options && options.boundary && height !== scaleHeight) {\n      // scrollIntoView 的 boundary是函数或者Element类型\n      var parentNode = isFunction(options.boundary) ? options.boundary(node) : options.boundary;\n      parentNode.scrollTop = Math.round(parentNode.scrollTop * (height / scaleHeight));\n    }\n  }\n}","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","scrollIntoView","isFunction","node","options","block","behavior","scrollMode","height","offsetHeight","scaleHeight","getBoundingClientRect","boundary","parentNode","scrollTop","Math","round"],"sources":["D:/Code/ceo-copilot-frontend/node_modules/@arco-design/web-react/es/_util/scrollIntoView.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport scrollIntoView from 'scroll-into-view-if-needed';\nimport { isFunction } from './is';\nexport default function (node, options) {\n    if (node) {\n        scrollIntoView(node, __assign({ block: 'start', behavior: 'instant', scrollMode: 'if-needed' }, options));\n        var height = node.offsetHeight;\n        var scaleHeight = node.getBoundingClientRect().height;\n        // trigger 带有scale动画，在 scrollIntoView 的时候，动画未执行完全，此时通过 getBoundingClientRect 获取到的 height 是 scale 后的高度。\n        // 所以需要额外滚动一点距离。\n        if (options && options.boundary && height !== scaleHeight) {\n            // scrollIntoView 的 boundary是函数或者Element类型\n            var parentNode = (isFunction(options.boundary) ? options.boundary(node) : options.boundary);\n            parentNode.scrollTop = Math.round(parentNode.scrollTop * (height / scaleHeight));\n        }\n    }\n}\n"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,IAAI,IAAI,IAAI,CAACA,QAAQ,IAAK,YAAY;EAClDA,QAAQ,GAAGC,MAAM,CAACC,MAAM,IAAI,UAASC,CAAC,EAAE;IACpC,KAAK,IAAIC,CAAC,EAAEC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEH,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;MACjDD,CAAC,GAAGG,SAAS,CAACF,CAAC,CAAC;MAChB,KAAK,IAAII,CAAC,IAAIL,CAAC,EAAE,IAAIH,MAAM,CAACS,SAAS,CAACC,cAAc,CAACC,IAAI,CAACR,CAAC,EAAEK,CAAC,CAAC,EAC3DN,CAAC,CAACM,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,CAAC;IACnB;IACA,OAAON,CAAC;EACZ,CAAC;EACD,OAAOH,QAAQ,CAACa,KAAK,CAAC,IAAI,EAAEN,SAAS,CAAC;AAC1C,CAAC;AACD,OAAOO,cAAc,MAAM,4BAA4B;AACvD,SAASC,UAAU,QAAQ,MAAM;AACjC,eAAe,UAAUC,IAAI,EAAEC,OAAO,EAAE;EACpC,IAAID,IAAI,EAAE;IACNF,cAAc,CAACE,IAAI,EAAEhB,QAAQ,CAAC;MAAEkB,KAAK,EAAE,OAAO;MAAEC,QAAQ,EAAE,SAAS;MAAEC,UAAU,EAAE;IAAY,CAAC,EAAEH,OAAO,CAAC,CAAC;IACzG,IAAII,MAAM,GAAGL,IAAI,CAACM,YAAY;IAC9B,IAAIC,WAAW,GAAGP,IAAI,CAACQ,qBAAqB,EAAE,CAACH,MAAM;IACrD;IACA;IACA,IAAIJ,OAAO,IAAIA,OAAO,CAACQ,QAAQ,IAAIJ,MAAM,KAAKE,WAAW,EAAE;MACvD;MACA,IAAIG,UAAU,GAAIX,UAAU,CAACE,OAAO,CAACQ,QAAQ,CAAC,GAAGR,OAAO,CAACQ,QAAQ,CAACT,IAAI,CAAC,GAAGC,OAAO,CAACQ,QAAS;MAC3FC,UAAU,CAACC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACH,UAAU,CAACC,SAAS,IAAIN,MAAM,GAAGE,WAAW,CAAC,CAAC;IACpF;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}